


ARM Macro Assembler    Page 1 


    1 00000000         ;; registres utilis√©s 
    2 00000000         ;;---------------------------------------------
    3 00000000         ;;   R0  R1  R4  R5   R7  R8  R9  R10  R11
    4 00000000         ;;---------------------------------------------
    5 00000000         ;; registres r√©serv√©s 
    6 00000000         ;;---------------------------------------------
    7 00000000         ;;  R1  R5  R9  R11
    8 00000000         ;;---------------------------------------------
    9 00000000         
   10 00000000         ;; le tableau est toujours √† la m√™me adresse dans R9 o
                       n r√©√©crira sur les ancienne valeur entr√©e manuellemen
                       t 
   11 00000000         ;; le labyrinthe doit avoir 6 virages (correspond √† R0)
                       
   12 00000000         
   13 00000000                 AREA             |.text|, CODE, READONLY
   14 00000000         
   15 00000000         ;on  redeclare au lieu d'importer  si non (error: A1141E
                       : Relocated expressions may only be added or subtracted)
                       
   16 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   17 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   18 00000000 00000040 
                       BROCHE_6
                               EQU              0x40        ; switch1
   19 00000000 00000001 
                       BROCHE0 EQU              0x1         ; bumper_R
   20 00000000 00000002 
                       BROCHE1 EQU              0x2         ; bumper_L
   21 00000000                 ENTRY
   22 00000000         
   23 00000000                 EXPORT           PARCOURS_LABYRINTHE2
   24 00000000         
   25 00000000         
   26 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   27 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d√©activer l
                                                            e moteur droit
   28 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   29 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri√®re
   30 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   31 00000000         
   32 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   33 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d√©activer 
                                                            le moteur gauche
   34 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga



ARM Macro Assembler    Page 2 


                                                            uche tourne vers l'
                                                            avant
   35 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri√®re
   36 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   37 00000000         
   38 00000000         
   39 00000000                 IMPORT           DEMARRAGE
   40 00000000                 IMPORT           WAIT
   41 00000000                 IMPORT           Clignotement
   42 00000000                 IMPORT           clignoteAuClic
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         
   47 00000000         ;---------------------------------------------------PARC
                       OURS DU LABYRINTHE 2------------------------------------
                       -------------------------  
   48 00000000         ;mov R0,#7  ; temoin de fin de parcours, (on comparera R
                       5 et 7pour savoir si le labyrinthe est termin√© )
   49 00000000         
   50 00000000         PARCOURS_LABYRINTHE2
   51 00000000 F04F 0500       mov              R5,#0       ; compteur d'indice
                                                             du tableau
   52 00000004         
   53 00000004         ;------------------------------------------------CLIC SU
                       R SWITCH1 POUR COMMENCER--------------------------------
                       --------------------------------
   54 00000004         readstate2
   55 00000004 4F3A            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
   56 00000006 F8D7 A000       ldr              r10,[r7]
   57 0000000A F1BA 0F00       CMP              r10,#0x00
   58 0000000E D1F9            BNE              readstate2
   59 00000010 F7FF FFFE       BL               clignoteAuClic
   60 00000014 F7FF FFFE       BL               WAIT
   61 00000018         avancer
   62 00000018 F7FF FFFE       BL               MOTEUR_DROIT_ON
   63 0000001C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
   64 00000020         ; Le robot avance tout droit
   65 00000020 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
   66 00000024 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
   67 00000028         
   68 00000028         ;----------------------------------TEST DE COLLISION FRO
                       NTALE --------------------------------------------------
                       ------------------------------------
   69 00000028         
   70 00000028         testCollisionfrontale
   71 00000028         
   72 00000028 2D06            CMP              R5,#6
   73 0000002A D054            BEQ              fintatonnement ;; si la conditi
                                                            on est vrai on arr√
                                                            ™te les moteurs, pa
                                                            sse dans le fichier
                                                             Main.s pour parcou
                                                            rir le labyrinthe c



ARM Macro Assembler    Page 3 


                                                            ette fois avec le c
                                                            ode obtenu par tato
                                                            nnement  
   74 0000002C         
   75 0000002C 4F31            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
   76 0000002E F8DF 80C8       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2)
   77 00000032         
   78 00000032 F8D8 A000       ldr              r10,[r8]    ; lecture de l'√©ta
                                                            t du bp_0
   79 00000036 683C            ldr              r4,[r7]     ; lecture de l'√©ta
                                                            t du bp_1
   80 00000038         
   81 00000038 F1BA 0F00       CMP              r10,#0x00
   82 0000003C D106            BNE              testBp_1
   83 0000003E         obstaclefrontale
   84 0000003E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; d√©activer 
                                                            le moteur gauche
   85 00000042 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; d√©activer l
                                                            e moteur droit
   86 00000046 F7FF FFFE       BL               Clignotement ; on clignote √† c
                                                            haque collision 
   87 0000004A E002            B                tourneADroite
   88 0000004C         
   89 0000004C         testBp_1
   90 0000004C 2C00            CMP              r4,#0x00
   91 0000004E D1EB            BNE              testCollisionfrontale
   92 00000050 E7F5            B                obstaclefrontale
   93 00000052         ;----------------------------------TOURNE A DROITE -----
                       --------------------------------------------------------
                       -------------------------
   94 00000052         tourneADroite
   95 00000052         ;on suppose que c'est vers la droite 
   96 00000052 F04F 0B02       mov              r11,#2      ; 2 pour  droite 
   97 00000056 F809 B005       STRB             R11, [R9, R5] ; √©crire dans le
                                                             tableau √† l'indic
                                                            e indiqu√© par R5
   98 0000005A         
   99 0000005A F7FF FFFE       BL               MOTEUR_DROIT_ON
  100 0000005E F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  101 00000062 F7FF FFFE       BL               WAIT        ; le WAIT et la vit
                                                            esse sont r√©gl√©s 
                                                            pour produire un an
                                                            gle de 90¬∞ 
  102 00000066 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; d√©activer l
                                                            e moteur droit
  103 0000006A         
  104 0000006A F7FF FFFE       BL               MOTEUR_DROIT_ON
  105 0000006E F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  106 00000072 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  107 00000076 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  108 0000007A         
  109 0000007A E7FF            B                testCollisiondemie
  110 0000007C         
  111 0000007C         ;----------------------------------TEST DE COLLISION  DU
                       RANT PARCOURS2 -----------------------------------------
                       --------------------------------------------
  112 0000007C         



ARM Macro Assembler    Page 4 


  113 0000007C         testCollisiondemie
  114 0000007C 491F            ldr              r1, =0xFFFFF ; R1 correspond √†
                                                             1/3 de la duree de
                                                             parcours entre deu
                                                            x obstacle frontale
                                                            , √† ajuster
  115 0000007E 4F1D            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  116 00000080 F8DF 8074       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  117 00000084         parcours2
  118 00000084 F1A1 0101       sub              r1,#1
  119 00000088 2900            CMP              r1,#0x00    ; si la condition e
                                                            st vraie alors c'es
                                                            t un parcours norma
                                                            le avec obstacle fr
                                                            ontale donc on incr
                                                            emenle compteur d'i
                                                            ndice puis on conti
                                                            ne la deuxiemme moi
                                                            ti√© du parcours 
  120 0000008A D01F            BEQ              incrementer
  121 0000008C         
  122 0000008C F8D8 A000       ldr              r10,[r8]    ; lecture de l'√©ta
                                                            t du bp_0
  123 00000090 683C            ldr              r4,[r7]     ; lecture de l'√©ta
                                                            t du bp_1
  124 00000092 F1BA 0F00       CMP              r10,#0x00
  125 00000096 D116            BNE              testBp12
  126 00000098         
  127 00000098         obstacleAdroite
  128 00000098         ;si  on arrive ici alors il y a eu collision plus t√¥t d
                       onc c'est un obstacle √† droite 
  129 00000098 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; d√©activer 
                                                            le moteur gauche
  130 0000009C F7FF FFFE       BL               MOTEUR_DROIT_OFF ; d√©activer l
                                                            e moteur droit
  131 000000A0 F7FF FFFE       BL               Clignotement ; on clignote √† c
                                                            haque collision 
  132 000000A4         
  133 000000A4         ;on √©crit la  direction gauche 
  134 000000A4 F04F 0B01       MOV              r11,#1      ; 1 pour  gauche 
  135 000000A8 F809 B005       STRB             R11, [R9, R5] ; √©crire dans le
                                                             tableau √† l'indic
                                                            e indiqu√© par R5
  136 000000AC F105 0501       ADD              R5,#1       ; incr√©mentation d
                                                            u compteur   B    t
                                                            ourneADroite  
  137 000000B0         
  138 000000B0         ; on tourne alors de 180¬∞ qui correspond √† tourner √† 
                       tourner  dans le sens inverse 
  139 000000B0 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  140 000000B4 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  141 000000B8 F7FF FFFE       BL               WAIT        ; le WAIT et la vit
                                                            esse sont r√©gl√©s 
                                                            pour produire un an
                                                            gle de 90¬∞ 
  142 000000BC F7FF FFFE       BL               WAIT        ; le WAIT et la vit
                                                            esse sont r√©gl√©s 



ARM Macro Assembler    Page 5 


                                                            pour produire un an
                                                            gle de 90¬∞ 
  143 000000C0 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; d√©activer 
                                                            le moteur droit
  144 000000C4         
  145 000000C4         ; on et avance normalement 
  146 000000C4 E7A8            B                avancer
  147 000000C6         
  148 000000C6         testBp12
  149 000000C6 2C00            CMP              r4,#0x00    ; bumper_1
  150 000000C8 D1DC            BNE              parcours2
  151 000000CA E7E5            B                obstacleAdroite
  152 000000CC         incrementer
  153 000000CC F105 0501       ADD              R5,#1
  154 000000D0 F7FF FFFE       BL               Clignotement ; on clignote pour
                                                             signaler que c'est
                                                             un parcours long  
                                                            
  155 000000D4 E7A8            B                testCollisionfrontale
  156 000000D6         fintatonnement
  157 000000D6 F7FF FFFE       BL               WAIT
  158 000000DA F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; d√©activer 
                                                            le moteur gauche
  159 000000DE F7FF FFFE       BL               MOTEUR_DROIT_OFF ; d√©activer l
                                                            e moteur droit
  160 000000E2 F7FF FFFE       BL               Clignotement ; on clignote √† c
                                                            haque collision
  161 000000E6 F7FF FFFE       BL               Clignotement ; on clignote √† c
                                                            haque collision
  162 000000EA         
  163 000000EA F7FF BFFE       B                DEMARRAGE
  164 000000EE                 END
              00 00 40007100 
              40024004 
              40024008 
              000FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\labytatonnement.d -o.\objects\labytatonnement.o -I.\RTE\
_Target_1 -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\I
nclude -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMC
M3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predef
ine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3
 SETA 1" --list=.\listings\labytatonnement.lst labytatonnement.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 13 in file labytatonnement.s
   Uses
      None
Comment: .text unused
PARCOURS_LABYRINTHE2 00000000

Symbol: PARCOURS_LABYRINTHE2
   Definitions
      At line 50 in file labytatonnement.s
   Uses
      At line 23 in file labytatonnement.s
Comment: PARCOURS_LABYRINTHE2 used once
avancer 00000018

Symbol: avancer
   Definitions
      At line 61 in file labytatonnement.s
   Uses
      At line 146 in file labytatonnement.s
Comment: avancer used once
fintatonnement 000000D6

Symbol: fintatonnement
   Definitions
      At line 156 in file labytatonnement.s
   Uses
      At line 73 in file labytatonnement.s
Comment: fintatonnement used once
incrementer 000000CC

Symbol: incrementer
   Definitions
      At line 152 in file labytatonnement.s
   Uses
      At line 120 in file labytatonnement.s
Comment: incrementer used once
obstacleAdroite 00000098

Symbol: obstacleAdroite
   Definitions
      At line 127 in file labytatonnement.s
   Uses
      At line 151 in file labytatonnement.s
Comment: obstacleAdroite used once
obstaclefrontale 0000003E

Symbol: obstaclefrontale
   Definitions
      At line 83 in file labytatonnement.s
   Uses
      At line 92 in file labytatonnement.s
Comment: obstaclefrontale used once
parcours2 00000084

Symbol: parcours2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 117 in file labytatonnement.s
   Uses
      At line 150 in file labytatonnement.s
Comment: parcours2 used once
readstate2 00000004

Symbol: readstate2
   Definitions
      At line 54 in file labytatonnement.s
   Uses
      At line 58 in file labytatonnement.s
Comment: readstate2 used once
testBp12 000000C6

Symbol: testBp12
   Definitions
      At line 148 in file labytatonnement.s
   Uses
      At line 125 in file labytatonnement.s
Comment: testBp12 used once
testBp_1 0000004C

Symbol: testBp_1
   Definitions
      At line 89 in file labytatonnement.s
   Uses
      At line 82 in file labytatonnement.s
Comment: testBp_1 used once
testCollisiondemie 0000007C

Symbol: testCollisiondemie
   Definitions
      At line 113 in file labytatonnement.s
   Uses
      At line 109 in file labytatonnement.s
Comment: testCollisiondemie used once
testCollisionfrontale 00000028

Symbol: testCollisionfrontale
   Definitions
      At line 70 in file labytatonnement.s
   Uses
      At line 91 in file labytatonnement.s
      At line 155 in file labytatonnement.s

tourneADroite 00000052

Symbol: tourneADroite
   Definitions
      At line 94 in file labytatonnement.s
   Uses
      At line 87 in file labytatonnement.s
Comment: tourneADroite used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 19 in file labytatonnement.s
   Uses
      At line 75 in file labytatonnement.s
      At line 115 in file labytatonnement.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 20 in file labytatonnement.s
   Uses
      At line 76 in file labytatonnement.s
      At line 116 in file labytatonnement.s

BROCHE_6 00000040

Symbol: BROCHE_6
   Definitions
      At line 18 in file labytatonnement.s
   Uses
      At line 55 in file labytatonnement.s
Comment: BROCHE_6 used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 16 in file labytatonnement.s
   Uses
      At line 55 in file labytatonnement.s
Comment: GPIO_PORTD_BASE used once
GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 17 in file labytatonnement.s
   Uses
      At line 75 in file labytatonnement.s
      At line 76 in file labytatonnement.s
      At line 115 in file labytatonnement.s
      At line 116 in file labytatonnement.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Clignotement 00000000

Symbol: Clignotement
   Definitions
      At line 41 in file labytatonnement.s
   Uses
      At line 86 in file labytatonnement.s
      At line 131 in file labytatonnement.s
      At line 154 in file labytatonnement.s
      At line 160 in file labytatonnement.s
      At line 161 in file labytatonnement.s

DEMARRAGE 00000000

Symbol: DEMARRAGE
   Definitions
      At line 39 in file labytatonnement.s
   Uses
      At line 163 in file labytatonnement.s
Comment: DEMARRAGE used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 29 in file labytatonnement.s
   Uses
      At line 100 in file labytatonnement.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 28 in file labytatonnement.s
   Uses
      At line 65 in file labytatonnement.s
      At line 106 in file labytatonnement.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 30 in file labytatonnement.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 27 in file labytatonnement.s
   Uses
      At line 85 in file labytatonnement.s
      At line 102 in file labytatonnement.s
      At line 130 in file labytatonnement.s
      At line 159 in file labytatonnement.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 26 in file labytatonnement.s
   Uses
      At line 62 in file labytatonnement.s
      At line 99 in file labytatonnement.s
      At line 104 in file labytatonnement.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 35 in file labytatonnement.s
   Uses
      At line 140 in file labytatonnement.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 34 in file labytatonnement.s
   Uses
      At line 66 in file labytatonnement.s
      At line 107 in file labytatonnement.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 36 in file labytatonnement.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 33 in file labytatonnement.s
   Uses
      At line 84 in file labytatonnement.s
      At line 129 in file labytatonnement.s
      At line 143 in file labytatonnement.s
      At line 158 in file labytatonnement.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 32 in file labytatonnement.s
   Uses
      At line 63 in file labytatonnement.s
      At line 105 in file labytatonnement.s
      At line 139 in file labytatonnement.s

WAIT 00000000

Symbol: WAIT
   Definitions
      At line 40 in file labytatonnement.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 60 in file labytatonnement.s
      At line 101 in file labytatonnement.s
      At line 141 in file labytatonnement.s
      At line 142 in file labytatonnement.s
      At line 157 in file labytatonnement.s

clignoteAuClic 00000000

Symbol: clignoteAuClic
   Definitions
      At line 42 in file labytatonnement.s
   Uses
      At line 59 in file labytatonnement.s
Comment: clignoteAuClic used once
14 symbols
370 symbols in table
