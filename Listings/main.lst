


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       -----
    2 00000000         ;#Authors
    3 00000000         ;@Kokou KOMBEDE
    4 00000000         ;@Ounissa SADAOUI
    5 00000000         ;Parcours E3FI-3I
    6 00000000         ;année 2024-2025
    7 00000000         ;-------------------------------------------------------
                       ------
    8 00000000         ; RK - Evalbot (Cortex M3 de Texas Instrument)
    9 00000000         ; programme - Pilotage  Evalbot pour parcouris un labyri
                       nthe
   10 00000000         ;-------------------------------------------------------
                       -------
   11 00000000         
   12 00000000                 AREA             |.text|, CODE, READONLY
   13 00000000         
   14 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   15 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   16 00000000         
   17 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            
   18 00000000         
   19 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   20 00000000         
   21 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   22 00000000         
   23 00000000         ; configure the corresponding pin to be an output
   24 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   25 00000000         
   26 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   27 00000000         ; By default, all GPIO pins have 2-mA drive.
   28 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   29 00000000         
   30 00000000         ; Digital enable register



ARM Macro Assembler    Page 2 


   31 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   32 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   33 00000000         
   34 00000000         ; Pul_up
   35 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   36 00000000         
   37 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^DECLARATION PINS ou BROCH
                       ES ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   38 00000000         ; LED
   39 00000000 00000010 
                       BROCHE_4
                               EQU              0x10        ; led1
   40 00000000 00000020 
                       BROCHE_5
                               EQU              0x20        ; led2 
   41 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5 0b0011
                                                            0000
   42 00000000         ; BUMPER
   43 00000000 00000001 
                       BROCHE0 EQU              0x1         ; bumper_R
   44 00000000 00000002 
                       BROCHE1 EQU              0x2         ; bumper_L
   45 00000000 00000003 
                       BROCHE0_1
                               EQU              0x3         ; bumperR_L
   46 00000000         ; SWITCH
   47 00000000 00000040 
                       BROCHE_6
                               EQU              0x40        ; switch1
   48 00000000 00000080 
                       BROCHE_7
                               EQU              0x80        ; switch2 
   49 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; sw1 et sw2
   50 00000000         
   51 00000000 00080000 
                       DUREE   EQU              0x80000     ; durée fréquence c
                                                            lignotement multipl
                                                            e  
   52 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   53 00000000         ;; registres utilisés 
   54 00000000         ;;---------------------------------------------
   55 00000000         ;;   R0  R1 R2  R3  R4  R5  R6  R7 R8  R9 R10 R11 , R12
   56 00000000         ;;---------------------------------------------
   57 00000000         ;; registres réservés 



ARM Macro Assembler    Page 3 


   58 00000000         ;;---------------------------------------------
   59 00000000         ;;  R2  R5  R9 R11, R12
   60 00000000         ;;---------------------------------------------
   61 00000000         ;; usages courants des régistres
   62 00000000         ;;---------------------------------------
   63 00000000         ;; r3,r2,r6 pour lire les pins de leds et allumer puis é
                       teindre
   64 00000000         ;; r7,r8,r10 pour lire les pins des switchs et bumpers 
   65 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   66 00000000                 ENTRY
   67 00000000                 EXPORT           __main
   68 00000000                 EXPORT           DEMARRAGE
   69 00000000                 EXPORT           Clignotement
   70 00000000                 EXPORT           GPIO_PORTD_BASE
   71 00000000                 EXPORT           GPIO_PORTE_BASE
   72 00000000                 EXPORT           BROCHE0
   73 00000000                 EXPORT           BROCHE1
   74 00000000                 EXPORT           WAIT
   75 00000000                 EXPORT           clignoteAuClic
   76 00000000         
   77 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   78 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   79 00000000         
   80 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   81 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   82 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   83 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   84 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   85 00000000         
   86 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   87 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   88 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   89 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   90 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   91 00000000         
   92 00000000                 IMPORT           PARCOURS_LABYRINTHE2
   93 00000000         
   94 00000000                 IMPORT           MOTEUR_DROIT_MIN
   95 00000000                 IMPORT           MOTEUR_GAUCHE_MIN



ARM Macro Assembler    Page 4 


   96 00000000                 IMPORT           WAIT_MIN
   97 00000000                 IMPORT           MOTEUR_DROIT_MAX
   98 00000000                 IMPORT           MOTEUR_GAUCHE_MAX
   99 00000000         
  100 00000000         
  101 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  102 00000000         __main
  103 00000000         
  104 00000000 F8DF 927C       LDR              R9, =buffer ; Charger l'adresse
                                                             de buffer dans R0
  105 00000004 F04F 0200       mov              r2, #0x000  ; pour eteindre LED
                                                            
  106 00000008 F04F 0500       mov              R5, #0      ; compteur de d'ind
                                                            ice dans la tableau
                                                             lors de l'écriture
                                                             elle vaudra aussi 
                                                            pour taille du tabl
                                                            eau 
  107 0000000C         ;mov R11,#0             ; compteur de d'indice dans la t
                       ableau lors de la lecture
  108 0000000C F04F 0C00       mov              R12,#0      ; compteur du nombr
                                                            e de parcours de la
                                                            byrinthe, si elle v
                                                            aut deux alors c'es
                                                            t la toute fin , on
                                                             dessine infini
  109 00000010         
  110 00000010         
  111 00000010 4E9C            ldr              r6, =SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
  112 00000012 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO E , F  et
                                                             D où sont branchés
                                                             les leds (0x28 == 
                                                            0b111000)
  113 00000016 6030            str              r0, [r6]
  114 00000018         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
  115 00000018 BF00            nop                          ;; tres tres import
                                                            ant....
  116 0000001A BF00            nop
  117 0000001C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
  118 0000001E         
  119 0000001E         
  120 0000001E         ;--------------------------------------------------CONFI
                       GURATION LED 4_5----------------------------------------
                       ------------------------------     
  121 0000001E         
  122 0000001E 4E9A            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
  123 00000020 F04F 0030       ldr              r0, = BROCHE4_5
  124 00000024 6030            str              r0, [r6]
  125 00000026         



ARM Macro Assembler    Page 5 


  126 00000026 4E99            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  127 00000028 F04F 0030       ldr              r0, = BROCHE4_5
  128 0000002C 6030            str              r0, [r6]
  129 0000002E         
  130 0000002E 4E98            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  131 00000030 F04F 0030       ldr              r0, = BROCHE4_5
  132 00000034 6030            str              r0, [r6]
  133 00000036         ;-------------------------------------------------------
                       CONFIGURATION Bumper0_1---------------------------------
                       --------------------------------
  134 00000036 4E97            ldr              r6, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  135 00000038 F04F 0003       ldr              r0, = BROCHE0_1
  136 0000003C 6030            str              r0, [r6]
  137 0000003E         
  138 0000003E 4E96            ldr              r6, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ; Enable Digital Fu
                                                            nction 
  139 00000040 F04F 0003       ldr              r0, = BROCHE0_1
  140 00000044 6030            str              r0, [r6]
  141 00000046         ;-------------------------------------------------------
                       CONFIGURATION Switch6_7---------------------------------
                       --------------------------------
  142 00000046 4E95            ldr              r6, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ; Pul_up 
  143 00000048 F04F 00C0       ldr              r0, = BROCHE6_7
  144 0000004C 6030            str              r0, [r6]
  145 0000004E         
  146 0000004E 4E94            ldr              r6, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  147 00000050 F04F 00C0       ldr              r0, = BROCHE6_7
  148 00000054 6030            str              r0, [r6]
  149 00000056         
  150 00000056         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------   
  151 00000056         ; Configure les PWM + GPIO
  152 00000056 F7FF FFFE       BL               MOTEUR_INIT
  153 0000005A         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------   
  154 0000005A         ; allumage des deux leds
  155 0000005A F04F 0330       mov              r3, #BROCHE4_5
  156 0000005E 4E91            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  157 00000060 6033            str              r3, [r6]
  158 00000062         



ARM Macro Assembler    Page 6 


  159 00000062         ;---------------------------------------------LECTURE DU
                        PREMIER APPUIS LONG -----------------------------------
                       -----------------------------------     
  160 00000062         ReadState
  161 00000062 4F91            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  162 00000064 F8D7 A000       ldr              r10,[r7]
  163 00000068 F1BA 0F00       CMP              r10,#0x00
  164 0000006C D1F9            BNE              ReadState
  165 0000006E E041            B                checkAppuisLong
  166 00000070         ;----------------------------------------------DEBUIT PR
                       OGRAMMATION DES DIRECTIONS -----------------------------
                       ---------------------------------------------   
  167 00000070         DebutProgrammation
  168 00000070 F7FF FFFE       BL               Clignotement
  169 00000074         ReadGauche
  170 00000074 4F8C            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2) 
                                                            ; affectation du sw
                                                            itch 1 
  171 00000076 F8D7 A000       ldr              r10,[r7]    ; lecture de l'état
                                                             du switch 1
  172 0000007A F1BA 0F00       CMP              r10,#0x00   ; vérifier si c'est
                                                             appuyé
  173 0000007E D108            BNE              ReadDroit   ; on  branche vers 
                                                            le switch1( gauche)
                                                             pour tester  si ja
                                                            mais le droit n'est
                                                             pas appuyé 
  174 00000080 E043            B                checkAppuisLongGauche ; on véri
                                                            fie si l'appuis est
                                                             long
  175 00000082         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  176 00000082         appuisCourtGauche
  177 00000082         ; on allume la led gauche pour signaler le clic 
  178 00000082 F04F 0320       mov              r3, #BROCHE_5
  179 00000086 4E89            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
_5<<2)
  180 00000088 F7FF FFFE       BL               clignoteAuClic 
                                                            ; gère l'allumage
  181 0000008C         
  182 0000008C         ; on définit l'entier correspondant à la direction gauch
                       e 
  183 0000008C F04F 0A01       mov              r10,#1      ; 1 pour  gauche 
  184 00000090 E02B            B                ecrireDirection ; écrir dans bu
                                                            ffer la direction 
  185 00000092         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  186 00000092         ReadDroit
  187 00000092 4F87            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_7<<2)
  188 00000094 F8D7 A000       ldr              r10,[r7]
  189 00000098 F1BA 0F00       CMP              r10,#0x00
  190 0000009C D1EA            BNE              ReadGauche
  191 0000009E E03F            B                checkAppuisLongDroit ; on vérif
                                                            i si l'appuis est l



ARM Macro Assembler    Page 7 


                                                            ong ou court
  192 000000A0         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  193 000000A0         appuisCourtDroit                     ; si on arrive à ce
                                                            tte étiquette alors
                                                             l'appuis est court
                                                            
  194 000000A0         ; on allume la led droite pour signaler le clic 
  195 000000A0 F04F 0310       mov              r3, #BROCHE_4
  196 000000A4 4E83            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
_4<<2)
  197 000000A6 F7FF FFFE       BL               clignoteAuClic 
                                                            ; gère l'allumage
  198 000000AA         
  199 000000AA         ; on définit l'entier correspondant à la direction gauch
                       e 
  200 000000AA F04F 0A02       mov              r10,#2      ; 2 pour  droite 
  201 000000AE E01C            B                ecrireDirection ; écrir dans ta
                                                            bleau la direction 
                                                            
  202 000000B0         
  203 000000B0         ;------------------------------------------------FIN PRO
                       GRAMMATION DES DIRECTIONS-------------------------------
                       ---------------------------------
  204 000000B0         ; le programme est enregistré maintemant
  205 000000B0         ; on peut parcourir le labyrinthe
  206 000000B0         FinProgrammation
  207 000000B0         ; on on clignote pour signaler fin de la programmation 
  208 000000B0 F04F 0330       mov              r3, #BROCHE4_5
  209 000000B4 4E7B            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  210 000000B6 F7FF FFFE       BL               Clignotement
  211 000000BA         
  212 000000BA         ;------------------------------------------------CLIC SU
                       R SWITCH1 POUR COMMENCER--------------------------------
                       --------------------------------
  213 000000BA         DEMARRAGE
  214 000000BA F04F 0B00       mov              R11,#0      ; compteur de d'ind
                                                            ice dans la tableau
                                                             lors de la lecture
                                                            
  215 000000BE 4F7A            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  216 000000C0 F8D7 A000       ldr              r10,[r7]
  217 000000C4 F1BA 0F00       CMP              r10,#0x00
  218 000000C8 D1FE            BNE              DEMARRAGE
  219 000000CA F7FF FFFE       BL               clignoteAuClic
  220 000000CE F7FF FFFE       BL               WAIT
  221 000000D2         ;---------------------------------------------------PARC
                       OURS DU LABYRINTHE 1------------------------------------
                       -------------------------  
  222 000000D2 F10C 0C01       ADD              R12,#1      ; On incrément  le 
                                                            compteur de parcour
                                                            s 
  223 000000D6         
  224 000000D6         
  225 000000D6         
  226 000000D6         



ARM Macro Assembler    Page 8 


  227 000000D6         parcours
  228 000000D6         ; Activer les deux moteurs droit et gauche
  229 000000D6 F7FF FFFE       BL               MOTEUR_DROIT_ON
  230 000000DA F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  231 000000DE         ; Evalbot avance droit devant
  232 000000DE F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  233 000000E2 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  234 000000E6         
  235 000000E6 E045            B                testCollision
  236 000000E8         
  237 000000E8 E7F5            b                parcours
  238 000000EA         
  239 000000EA         
  240 000000EA         
  241 000000EA         
  242 000000EA         ;-----------------------------------------------FIN PARC
                       OURS DU LABYRINTHE--------------------------------------
                       -----------------------------------  
  243 000000EA         
  244 000000EA         ecrireDirection
  245 000000EA F809 A005       STRB             R10, [R9, R5] ; écrire dans le 
                                                            tableau à l'indice 
                                                            indiqué par R5
  246 000000EE F105 0501       ADD              R5,#1       ; incrémentation du
                                                             compteur 
  247 000000F2 E7BF            B                ReadGauche  ; on retourne à la 
                                                            lecture des directi
                                                            on 
  248 000000F4         
  249 000000F4         ;-----------------------------------------------DEBUT LO
                       GIQUE APUIS LONG ---------------------------------------
                       ---------------------------------- 
  250 000000F4         ;dureé R1 correspond à la duree 
  251 000000F4         ;de l'appuis long  envirion 2seconde
  252 000000F4 F44F 217F 
                       checkAppuisLong
                               ldr              r1, =0xFF000
  253 000000F8         wait0
  254 000000F8 4F6B            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  255 000000FA F8D7 A000       ldr              r10,[r7]
  256 000000FE F1BA 0F00       CMP              r10,#0x00
  257 00000102 D1AE            BNE              ReadState   ; si l'utilisateur 
                                                            relâche pendant le 
                                                            wait  c'est à dire 
                                                             r10=0x01 , on reco
                                                            mmence 
  258 00000104 3901            subs             r1, #1
  259 00000106 D1F7            bne              wait0
  260 00000108 E7B2            B                DebutProgrammation
  261 0000010A         
  262 0000010A         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  263 0000010A         checkAppuisLongGauche
  264 0000010A F44F 217F       ldr              r1, =0xFF000 ; R1 correspond à 
                                                            la duree de l'appui
                                                            s long 
  265 0000010E         wait01



ARM Macro Assembler    Page 9 


  266 0000010E 4F66            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  267 00000110 F8D7 A000       ldr              r10,[r7]
  268 00000114 F1BA 0F00       CMP              r10,#0x00
  269 00000118 D1B3            BNE              appuisCourtGauche ; si l'utilis
                                                            ateur relâche penda
                                                            nt le wait  c'est-à
                                                            -dire  r10=0x01 , c
                                                            'est un appuis cour
                                                            t sur gauche 
  270 0000011A 3901            subs             r1, #1      ; sinon on continue
                                                             de lire dans que d
                                                            urée n'est pas acro
                                                            ulé
  271 0000011C D1F7            bne              wait01
  272 0000011E E7C7            B                FinProgrammation ; si on arrive
                                                             ici alor l'appuis 
                                                            est long donc c'est
                                                             la fin de la progr
                                                            ammation 
  273 00000120         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  274 00000120         checkAppuisLongDroit
  275 00000120 F44F 217F       ldr              r1, =0xFF000 ; correspond à la 
                                                            duree de l'appuis l
                                                            ong 
  276 00000124         wait02
  277 00000124 4F62            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_7<<2)
  278 00000126 F8D7 A000       ldr              r10,[r7]
  279 0000012A F1BA 0F00       CMP              r10,#0x00
  280 0000012E D1B7            BNE              appuisCourtDroit ; si l'utilisa
                                                            teur relâche pendan
                                                            t le wait  c'est-à-
                                                            dire r10=0x01 , c'e
                                                            st un appuis court 
                                                            sur droit
  281 00000130 3901            subs             r1, #1
  282 00000132 D1F7            bne              wait02
  283 00000134 E7BC            B                FinProgrammation
  284 00000136         ;------------------------------------------------DEBUT L
                       OGIQUES DE CLIGNOTEMENTS -------------------------------
                       -----------------------------------------
  285 00000136         ; logique du clignote simple  à chaque touche 
  286 00000136         clignoteAuClic
  287 00000136 4960            ldr              r1, =0xFFFFF ; durée d'allumage
                                                            
  288 00000138 6033            str              r3, [r6]    ; allumer la led co
                                                            rrespondant dans R3
                                                            
  289 0000013A 3901    wait21  subs             r1, #1
  290 0000013C D1FD            bne              wait21
  291 0000013E 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  292 00000140 4770            BX               LR          ;; retour à l'endro
                                                            it ou clignoteAuCli
                                                            c est appeler 
  293 00000142         ;-------------------------------------------------------



ARM Macro Assembler    Page 10 


                       --------------------------------------------------------
                       ---------
  294 00000142         ; logique de clignotement multiple   avant et apprès le 
                       programmation 
  295 00000142         Clignotement
  296 00000142 F04F 0408       ldr              r4, =0x8    ; durée de clignote
                                                            ment
  297 00000146 F04F 0330       mov              r3, #BROCHE4_5
  298 0000014A 4E56            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  299 0000014C 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  300 0000014E         loop
  301 0000014E 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  302 00000150 F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  303 00000154         
  304 00000154 3901    wait1   subs             r1, #1
  305 00000156 D1FD            bne              wait1
  306 00000158         
  307 00000158 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  308 0000015A F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  309 0000015E         
  310 0000015E 3901    wait2   subs             r1, #1
  311 00000160 D1FD            bne              wait2
  312 00000162         
  313 00000162 3C01            subs             r4, #1      ; contrôle le temp 
                                                            de clignotement 
  314 00000164 D1F3            bne              loop
  315 00000166         
  316 00000166 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  317 00000168 4770            BX               LR
  318 0000016A         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  319 0000016A         ;; Boucle d'attente   simple  sans rien faire 
  320 0000016A F44F 0120 
                       WAIT    ldr              r1, =0xA00000
  321 0000016E 3901    wait3   subs             r1, #1
  322 00000170 D1FD            bne              wait3
  323 00000172 4770            BX               LR
  324 00000174         ;----------------------------------TEST DE COLLISION ---
                       --------------------------------------------------------
                       ---------------------------
  325 00000174         
  326 00000174         testCollision
  327 00000174 4F51            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  328 00000176 F8DF 8148       ldr              r8, = GPIO_PORTE_BASE + (BROCHE



ARM Macro Assembler    Page 11 


1<<2)
  329 0000017A         
  330 0000017A F8D8 A000       ldr              r10,[r8]    ; lecture de l'état
                                                             du bp_0
  331 0000017E 683C            ldr              r4,[r7]     ; lecture de l'état
                                                             du bp_1
  332 00000180 F1BA 0F00       CMP              r10,#0x00
  333 00000184 D106            BNE              testBp1
  334 00000186 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  335 0000018A F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  336 0000018E F7FF FFFE       BL               Clignotement ; on clignote à ch
                                                            aque collision 
  337 00000192 E008            B                lectureMemoire
  338 00000194         
  339 00000194         
  340 00000194         testBp1
  341 00000194 2C00            CMP              r4,#0x00
  342 00000196 D19E            BNE              parcours
  343 00000198 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  344 0000019C F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  345 000001A0 F7FF FFFE       BL               Clignotement ; on clignote à ch
                                                            aque collision
  346 000001A4         
  347 000001A4 E7FF            B                lectureMemoire
  348 000001A6         ;----------------------------------LECTURE  MEMOIRE ----
                       --------------------------------------------------------
                       --------------------------
  349 000001A6         lectureMemoire
  350 000001A6 F819 400B       LDRB             R4, [R9, R11] ; Charger l'octet
                                                             suivant dans R4 (b
                                                            uffer[R11])
  351 000001AA 2C01            CMP              R4, #1
  352 000001AC D00E            BEQ              tourneAGauche ; sinon tourne à 
                                                            gauche  R4 vaut 1 d
                                                            ans ce cas
  353 000001AE 2C02            CMP              R4, #2
  354 000001B0 D0FF            BEQ              tourneADroite ; si 2 tourne à d
                                                            roite R4 vaut 2 dan
                                                            s ce cas 
  355 000001B2         
  356 000001B2         
  357 000001B2         ;----------------------------------TOURNE A DROITE OU GA
                       UCHE  --------------------------------------------------
                       ------------------------------------
  358 000001B2         tourneADroite
  359 000001B2 F7FF FFFE       BL               MOTEUR_DROIT_ON
  360 000001B6 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  361 000001BA F7FF FFFE       BL               WAIT        ; le WAIT et la vit
                                                            esse sont réglés po
                                                            ur produire un angl
                                                            e de 90° 
  362 000001BE F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  363 000001C2 F10B 0B01       ADD              R11,#1      ; incrémentation po
                                                            ur la prochaine dir



ARM Macro Assembler    Page 12 


                                                            ection 
  364 000001C6 45AB            CMP              R11,R5      ; on vérifie si tou
                                                            t le programme a ét
                                                            é lu 
  365 000001C8 D00D            BEQ              fin         ; c'est la fin si o
                                                            ui 
  366 000001CA E784            B                parcours    ; on continue le pa
                                                            rcours si non 
  367 000001CC         tourneAGauche
  368 000001CC F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  369 000001D0 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  370 000001D4 F7FF FFFE       BL               WAIT        ; le WAIT et la vit
                                                            esse sont réglés po
                                                            ur produire un angl
                                                            e de 90° 
  371 000001D8 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur droit
  372 000001DC F10B 0B01       ADD              R11,#1      ; incrémentation po
                                                            ur la prochaine dir
                                                            ection 
  373 000001E0 45AB            CMP              R11,R5      ; on vérifie si tou
                                                            t le programme a ét
                                                            é lu 
  374 000001E2 D000            BEQ              fin         ; c'est la fin si o
                                                            ui 
  375 000001E4 E777            B                parcours    ; on continue le pa
                                                            rcours si non 
  376 000001E6         
  377 000001E6         fin
  378 000001E6 F7FF FFFE       BL               MOTEUR_DROIT_ON
  379 000001EA F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  380 000001EE F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  381 000001F2 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  382 000001F6 F7FF FFFE       BL               WAIT
  383 000001FA F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  384 000001FE F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  385 00000202 F7FF FFFE       BL               Clignotement
  386 00000206 F7FF FFFE       BL               Clignotement
  387 0000020A         
  388 0000020A         ;------------------------------------------------------P
                       ARCOURS DU DEUXIEME LABYRINTHE  PAR TATONNEMENT --------
                       --------------------------------------------------------
                       --
  389 0000020A         
  390 0000020A F1BC 0F02       CMP              R12,#2
  391 0000020E D001            BEQ              INFINI
  392 00000210 F7FF BFFE       B                PARCOURS_LABYRINTHE2 ; on va da
                                                            ns le fichier labyt
                                                            atonnement.s 
  393 00000214         
  394 00000214         ;-------------------------------------------------------
                       --------------------------------------------------------
                       --------------------------------------------------
  395 00000214         
  396 00000214         INFINI
  397 00000214         
  398 00000214 F7FF FFFE       BL               MOTEUR_DROIT_ON



ARM Macro Assembler    Page 13 


  399 00000218 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  400 0000021C         ; Faire un arc de cercle vers la gauche (virage à gauche
                       )
  401 0000021C         ; Moteur droit à pleine vitesse, moteur gauche réduit
  402 0000021C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  403 00000220 F7FF FFFE       BL               MOTEUR_GAUCHE_MIN
  404 00000224 F7FF FFFE       BL               WAIT
  405 00000228 F7FF FFFE       BL               WAIT
  406 0000022C F7FF FFFE       BL               WAIT
  407 00000230 F7FF FFFE       BL               WAIT
  408 00000234         
  409 00000234         ; Effectuer un virage vers la droite pour revenir à la l
                       igne droite
  410 00000234         ; Moteur gauche à pleine vitesse, moteur droit réduit
  411 00000234         
  412 00000234         
  413 00000234 F7FF FFFE       BL               MOTEUR_DROIT_MAX
  414 00000238 F7FF FFFE       BL               MOTEUR_GAUCHE_MAX
  415 0000023C F7FF FFFE       BL               WAIT
  416 00000240         
  417 00000240         
  418 00000240         ; Répéter l'arc de cercle vers la gauche (virage à gauch
                       e)
  419 00000240 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  420 00000244 F7FF FFFE       BL               MOTEUR_DROIT_MIN
  421 00000248 F7FF FFFE       BL               WAIT
  422 0000024C F7FF FFFE       BL               WAIT
  423 00000250 F7FF FFFE       BL               WAIT
  424 00000254         
  425 00000254         ; Répéter le virage vers la droite
  426 00000254         
  427 00000254         
  428 00000254 F7FF FFFE       BL               MOTEUR_DROIT_MAX
  429 00000258 F7FF FFFE       BL               MOTEUR_GAUCHE_MAX
  430 0000025C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  431 00000260 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  432 00000264         
  433 00000264 F7FF FFFE       BL               WAIT
  434 00000268         
  435 00000268 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  436 0000026C F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  437 00000270         
  438 00000270 F7FF FFFE       BL               Clignotement
  439 00000274 F7FF FFFE       BL               Clignotement
  440 00000278 F7FF FFFE       BL               Clignotement
  441 0000027C         
  442 0000027C         ; Fin de INFINI
  443 0000027C         
  444 0000027C         END
  445 0000027C         ;-------------------------------------------------------
                       --------------------------------------------------------
                       -----------------------------------------------
  446 0000027C         
  447 0000027C         
  448 0000027C         ;--------------------------------------------------DECLA
                       RATION TABLEAU CONTENANT LE PROGRAMME ------------------
                       --------------------------------------------------------



ARM Macro Assembler    Page 14 


                       ----
  449 0000027C         
  450 0000027C BF00            NOP
  451 0000027E         
  452 0000027E 00 00 00000000 
              400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              40007510 
              4000751C 
              400250C0 
              40007100 
              40025080 
              40007200 
              40025040 
              000FFFFF 
              40024004 
              40024008         AREA             |variable|, DATA, READWRITE
  453 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    buffer  space            50          ;   tableau de 50 o
                                                            ctets pour contenir
                                                             les instructions 
  454 00000032                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Users\m
aglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\magl
o\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine
="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION
 SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\list
ings\main.lst Main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file Main.s
   Uses
      None
Comment: .text unused
Clignotement 00000142

Symbol: Clignotement
   Definitions
      At line 295 in file Main.s
   Uses
      At line 69 in file Main.s
      At line 168 in file Main.s
      At line 210 in file Main.s
      At line 336 in file Main.s
      At line 345 in file Main.s
      At line 385 in file Main.s
      At line 386 in file Main.s
      At line 438 in file Main.s
      At line 439 in file Main.s
      At line 440 in file Main.s

DEMARRAGE 000000BA

Symbol: DEMARRAGE
   Definitions
      At line 213 in file Main.s
   Uses
      At line 68 in file Main.s
      At line 218 in file Main.s

DebutProgrammation 00000070

Symbol: DebutProgrammation
   Definitions
      At line 167 in file Main.s
   Uses
      At line 260 in file Main.s
Comment: DebutProgrammation used once
END 0000027C

Symbol: END
   Definitions
      At line 444 in file Main.s
   Uses
      None
Comment: END unused
FinProgrammation 000000B0

Symbol: FinProgrammation
   Definitions
      At line 206 in file Main.s
   Uses
      At line 272 in file Main.s
      At line 283 in file Main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

INFINI 00000214

Symbol: INFINI
   Definitions
      At line 396 in file Main.s
   Uses
      At line 391 in file Main.s
Comment: INFINI used once
ReadDroit 00000092

Symbol: ReadDroit
   Definitions
      At line 186 in file Main.s
   Uses
      At line 173 in file Main.s
Comment: ReadDroit used once
ReadGauche 00000074

Symbol: ReadGauche
   Definitions
      At line 169 in file Main.s
   Uses
      At line 190 in file Main.s
      At line 247 in file Main.s

ReadState 00000062

Symbol: ReadState
   Definitions
      At line 160 in file Main.s
   Uses
      At line 164 in file Main.s
      At line 257 in file Main.s

WAIT 0000016A

Symbol: WAIT
   Definitions
      At line 320 in file Main.s
   Uses
      At line 74 in file Main.s
      At line 220 in file Main.s
      At line 361 in file Main.s
      At line 370 in file Main.s
      At line 382 in file Main.s
      At line 404 in file Main.s
      At line 405 in file Main.s
      At line 406 in file Main.s
      At line 407 in file Main.s
      At line 415 in file Main.s
      At line 421 in file Main.s
      At line 422 in file Main.s
      At line 423 in file Main.s
      At line 433 in file Main.s

__main 00000000

Symbol: __main
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 102 in file Main.s
   Uses
      At line 67 in file Main.s
Comment: __main used once
appuisCourtDroit 000000A0

Symbol: appuisCourtDroit
   Definitions
      At line 193 in file Main.s
   Uses
      At line 280 in file Main.s
Comment: appuisCourtDroit used once
appuisCourtGauche 00000082

Symbol: appuisCourtGauche
   Definitions
      At line 176 in file Main.s
   Uses
      At line 269 in file Main.s
Comment: appuisCourtGauche used once
checkAppuisLong 000000F4

Symbol: checkAppuisLong
   Definitions
      At line 252 in file Main.s
   Uses
      At line 165 in file Main.s
Comment: checkAppuisLong used once
checkAppuisLongDroit 00000120

Symbol: checkAppuisLongDroit
   Definitions
      At line 274 in file Main.s
   Uses
      At line 191 in file Main.s
Comment: checkAppuisLongDroit used once
checkAppuisLongGauche 0000010A

Symbol: checkAppuisLongGauche
   Definitions
      At line 263 in file Main.s
   Uses
      At line 174 in file Main.s
Comment: checkAppuisLongGauche used once
clignoteAuClic 00000136

Symbol: clignoteAuClic
   Definitions
      At line 286 in file Main.s
   Uses
      At line 75 in file Main.s
      At line 180 in file Main.s
      At line 197 in file Main.s
      At line 219 in file Main.s

ecrireDirection 000000EA

Symbol: ecrireDirection
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 244 in file Main.s
   Uses
      At line 184 in file Main.s
      At line 201 in file Main.s

fin 000001E6

Symbol: fin
   Definitions
      At line 377 in file Main.s
   Uses
      At line 365 in file Main.s
      At line 374 in file Main.s

lectureMemoire 000001A6

Symbol: lectureMemoire
   Definitions
      At line 349 in file Main.s
   Uses
      At line 337 in file Main.s
      At line 347 in file Main.s

loop 0000014E

Symbol: loop
   Definitions
      At line 300 in file Main.s
   Uses
      At line 314 in file Main.s
Comment: loop used once
parcours 000000D6

Symbol: parcours
   Definitions
      At line 227 in file Main.s
   Uses
      At line 237 in file Main.s
      At line 342 in file Main.s
      At line 366 in file Main.s
      At line 375 in file Main.s

testBp1 00000194

Symbol: testBp1
   Definitions
      At line 340 in file Main.s
   Uses
      At line 333 in file Main.s
Comment: testBp1 used once
testCollision 00000174

Symbol: testCollision
   Definitions
      At line 326 in file Main.s
   Uses
      At line 235 in file Main.s
Comment: testCollision used once
tourneADroite 000001B2



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: tourneADroite
   Definitions
      At line 358 in file Main.s
   Uses
      At line 354 in file Main.s
Comment: tourneADroite used once
tourneAGauche 000001CC

Symbol: tourneAGauche
   Definitions
      At line 367 in file Main.s
   Uses
      At line 352 in file Main.s
Comment: tourneAGauche used once
wait0 000000F8

Symbol: wait0
   Definitions
      At line 253 in file Main.s
   Uses
      At line 259 in file Main.s
Comment: wait0 used once
wait01 0000010E

Symbol: wait01
   Definitions
      At line 265 in file Main.s
   Uses
      At line 271 in file Main.s
Comment: wait01 used once
wait02 00000124

Symbol: wait02
   Definitions
      At line 276 in file Main.s
   Uses
      At line 282 in file Main.s
Comment: wait02 used once
wait1 00000154

Symbol: wait1
   Definitions
      At line 304 in file Main.s
   Uses
      At line 305 in file Main.s
Comment: wait1 used once
wait2 0000015E

Symbol: wait2
   Definitions
      At line 310 in file Main.s
   Uses
      At line 311 in file Main.s
Comment: wait2 used once
wait21 0000013A

Symbol: wait21
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 289 in file Main.s
   Uses
      At line 290 in file Main.s
Comment: wait21 used once
wait3 0000016E

Symbol: wait3
   Definitions
      At line 321 in file Main.s
   Uses
      At line 322 in file Main.s
Comment: wait3 used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buffer 00000000

Symbol: buffer
   Definitions
      At line 453 in file Main.s
   Uses
      At line 104 in file Main.s
Comment: buffer used once
variable 00000000

Symbol: variable
   Definitions
      At line 452 in file Main.s
   Uses
      None
Comment: variable unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 43 in file Main.s
   Uses
      At line 72 in file Main.s
      At line 327 in file Main.s

BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 45 in file Main.s
   Uses
      At line 135 in file Main.s
      At line 139 in file Main.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 44 in file Main.s
   Uses
      At line 73 in file Main.s
      At line 328 in file Main.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 41 in file Main.s
   Uses
      At line 123 in file Main.s
      At line 127 in file Main.s
      At line 131 in file Main.s
      At line 155 in file Main.s
      At line 156 in file Main.s
      At line 208 in file Main.s
      At line 209 in file Main.s
      At line 297 in file Main.s
      At line 298 in file Main.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 49 in file Main.s
   Uses
      At line 143 in file Main.s
      At line 147 in file Main.s

BROCHE_4 00000010

Symbol: BROCHE_4
   Definitions
      At line 39 in file Main.s
   Uses
      At line 195 in file Main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 196 in file Main.s

BROCHE_5 00000020

Symbol: BROCHE_5
   Definitions
      At line 40 in file Main.s
   Uses
      At line 178 in file Main.s
      At line 179 in file Main.s

BROCHE_6 00000040

Symbol: BROCHE_6
   Definitions
      At line 47 in file Main.s
   Uses
      At line 161 in file Main.s
      At line 170 in file Main.s
      At line 215 in file Main.s
      At line 254 in file Main.s
      At line 266 in file Main.s

BROCHE_7 00000080

Symbol: BROCHE_7
   Definitions
      At line 48 in file Main.s
   Uses
      At line 187 in file Main.s
      At line 277 in file Main.s

DUREE 00080000

Symbol: DUREE
   Definitions
      At line 51 in file Main.s
   Uses
      At line 302 in file Main.s
      At line 308 in file Main.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 35 in file Main.s
   Uses
      At line 134 in file Main.s
      At line 142 in file Main.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 32 in file Main.s
   Uses
      At line 126 in file Main.s
      At line 138 in file Main.s
      At line 146 in file Main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 24 in file Main.s
   Uses
      At line 122 in file Main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 28 in file Main.s
   Uses
      At line 130 in file Main.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 21 in file Main.s
   Uses
      At line 70 in file Main.s
      At line 142 in file Main.s
      At line 146 in file Main.s
      At line 161 in file Main.s
      At line 170 in file Main.s
      At line 187 in file Main.s
      At line 215 in file Main.s
      At line 254 in file Main.s
      At line 266 in file Main.s
      At line 277 in file Main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 19 in file Main.s
   Uses
      At line 71 in file Main.s
      At line 134 in file Main.s
      At line 138 in file Main.s
      At line 327 in file Main.s
      At line 328 in file Main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 17 in file Main.s
   Uses
      At line 122 in file Main.s
      At line 126 in file Main.s
      At line 130 in file Main.s
      At line 156 in file Main.s
      At line 179 in file Main.s
      At line 196 in file Main.s
      At line 209 in file Main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 298 in file Main.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 15 in file Main.s
   Uses
      At line 111 in file Main.s
Comment: SYSCTL_PERIPH_GPIO used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 83 in file Main.s
   Uses
      At line 360 in file Main.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 82 in file Main.s
   Uses
      At line 232 in file Main.s
      At line 380 in file Main.s
      At line 402 in file Main.s
      At line 430 in file Main.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 84 in file Main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_MAX 00000000

Symbol: MOTEUR_DROIT_MAX
   Definitions
      At line 97 in file Main.s
   Uses
      At line 413 in file Main.s
      At line 428 in file Main.s

MOTEUR_DROIT_MIN 00000000

Symbol: MOTEUR_DROIT_MIN
   Definitions
      At line 94 in file Main.s
   Uses
      At line 420 in file Main.s
Comment: MOTEUR_DROIT_MIN used once
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 81 in file Main.s
   Uses
      At line 335 in file Main.s
      At line 344 in file Main.s
      At line 362 in file Main.s
      At line 384 in file Main.s
      At line 436 in file Main.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 80 in file Main.s
   Uses
      At line 229 in file Main.s
      At line 359 in file Main.s
      At line 378 in file Main.s
      At line 398 in file Main.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 89 in file Main.s
   Uses
      At line 369 in file Main.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 88 in file Main.s
   Uses
      At line 233 in file Main.s
      At line 381 in file Main.s
      At line 419 in file Main.s
      At line 431 in file Main.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 90 in file Main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_MAX 00000000

Symbol: MOTEUR_GAUCHE_MAX
   Definitions
      At line 98 in file Main.s
   Uses
      At line 414 in file Main.s
      At line 429 in file Main.s

MOTEUR_GAUCHE_MIN 00000000

Symbol: MOTEUR_GAUCHE_MIN
   Definitions
      At line 95 in file Main.s
   Uses
      At line 403 in file Main.s
Comment: MOTEUR_GAUCHE_MIN used once
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 87 in file Main.s
   Uses
      At line 334 in file Main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 343 in file Main.s
      At line 371 in file Main.s
      At line 383 in file Main.s
      At line 435 in file Main.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 86 in file Main.s
   Uses
      At line 230 in file Main.s
      At line 368 in file Main.s
      At line 379 in file Main.s
      At line 399 in file Main.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 78 in file Main.s
   Uses
      At line 152 in file Main.s
Comment: MOTEUR_INIT used once
PARCOURS_LABYRINTHE2 00000000

Symbol: PARCOURS_LABYRINTHE2
   Definitions
      At line 92 in file Main.s
   Uses
      At line 392 in file Main.s
Comment: PARCOURS_LABYRINTHE2 used once
WAIT_MIN 00000000

Symbol: WAIT_MIN
   Definitions
      At line 96 in file Main.s
   Uses
      None
Comment: WAIT_MIN unused
17 symbols
408 symbols in table
