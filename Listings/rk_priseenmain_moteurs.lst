


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000         
   12 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            
   13 00000000         
   14 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   15 00000000         
   16 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   17 00000000         
   18 00000000         ; configure the corresponding pin to be an output
   19 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   20 00000000         
   21 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   22 00000000         ; By default, all GPIO pins have 2-mA drive.
   23 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   24 00000000         
   25 00000000         ; Digital enable register
   26 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   27 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   28 00000000         



ARM Macro Assembler    Page 2 


   29 00000000         ; Pul_up
   30 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   31 00000000         
   32 00000000         ; LED
   33 00000000 00000010 
                       BROCHE_4
                               EQU              0x10        ; led1
   34 00000000 00000020 
                       BROCHE_5
                               EQU              0x20        ; led2 
   35 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5 0b0011
                                                            0000
   36 00000000         ; BUMPER
   37 00000000 00000001 
                       BROCHE0 EQU              0x1         ; bumper_R
   38 00000000 00000002 
                       BROCHE1 EQU              0x2         ; bumper_L
   39 00000000 00000003 
                       BROCHE0_1
                               EQU              0x3         ; bumperR_L
   40 00000000         ; SWITCH
   41 00000000 00000040 
                       BROCHE_6
                               EQU              0x40        ; switch1
   42 00000000 00000080 
                       BROCHE_7
                               EQU              0x80        ; switch2 
   43 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; sw1 et sw2
   44 00000000         ; blinking frequency
   45 00000000 00080000 
                       DUREE   EQU              0x80000
   46 00000000         
   47 00000000         ;; registres utilisés 
   48 00000000         ;;-----------------------
   49 00000000         ;;   R0  R2  R3  R4  R5  R6
   50 00000000         ;;-------------------------
   51 00000000                 ENTRY
   52 00000000                 EXPORT           __main
   53 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   54 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   55 00000000         
   56 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   57 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   58 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av



ARM Macro Assembler    Page 3 


                                                            ant
   59 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   60 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   61 00000000         
   62 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   63 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   64 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   65 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   66 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   67 00000000         __main
   68 00000000         
   69 00000000 4E2E            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   70 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO E , F  et
                                                             D où sont branchés
                                                             les leds (0x28 == 
                                                            0b111000)
   71 00000006 6030            str              r0, [r6]
   72 00000008         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   73 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   74 0000000A BF00            nop
   75 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   76 0000000E         
   77 0000000E         
   78 0000000E         
   79 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   80 0000000E         
   81 0000000E 4E2C            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   82 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   83 00000014 6030            str              r0, [r6]
   84 00000016         
   85 00000016 4E2B            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   86 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   87 0000001C 6030            str              r0, [r6]
   88 0000001E         



ARM Macro Assembler    Page 4 


   89 0000001E 4E2A            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   90 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   91 00000024 6030            str              r0, [r6]
   92 00000026         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper0_1
   93 00000026 4E29            ldr              r6, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
   94 00000028 F04F 0003       ldr              r0, = BROCHE0_1
   95 0000002C 6030            str              r0, [r6]
   96 0000002E         
   97 0000002E 4E28            ldr              r6, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   98 00000030 F04F 0003       ldr              r0, = BROCHE0_1
   99 00000034 6030            str              r0, [r6]
  100 00000036         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switch6_7
  101 00000036 4E27            ldr              r6, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  102 00000038 F04F 00C0       ldr              r0, = BROCHE6_7
  103 0000003C 6030            str              r0, [r6]
  104 0000003E         
  105 0000003E 4E26            ldr              r6, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  106 00000040 F04F 00C0       ldr              r0, = BROCHE6_7
  107 00000044 6030            str              r0, [r6]
  108 00000046         
  109 00000046 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  110 0000004A         
  111 0000004A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration 
  112 0000004A         ;  ldr r4, = GPIO_PORTF_BASE + (BROCHE_4<<2)  ;; pour al
                       lumer la led4
  113 0000004A         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED2 
  114 0000004A         ;  ldr r5, = GPIO_PORTF_BASE + (BROCHE_5<<2)  ;;   
  115 0000004A         ;  ldr r7, = GPIO_PORTE_BASE + (BROCHE0<<2)  ;; @data Re
                       gister = @base + (mask<<2) ==> Switcher  
  116 0000004A         ;  ldr r8, = GPIO_PORTE_BASE + (BROCHE1<<2)  ;; @data Re
                       gister = @base + (mask<<2) ==> Switcher
  117 0000004A         
  118 0000004A         ; Configure les PWM + GPIO
  119 0000004A F7FF FFFE       BL               MOTEUR_INIT
  120 0000004E         
  121 0000004E         
  122 0000004E         ; pour allumer les deux leds
  123 0000004E F04F 0330       mov              r3, #BROCHE4_5
  124 00000052 4E22            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  125 00000054         
  126 00000054         ;mov r4, #BROCHE_6  
  127 00000054 4F22            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)



ARM Macro Assembler    Page 5 


  128 00000056         
  129 00000056         ; allumage des deux leds 
  130 00000056 6033            str              r3, [r6]
  131 00000058         
  132 00000058         ;loop 
  133 00000058         
  134 00000058         ReadState
  135 00000058 F8D7 A000       ldr              r10,[r7]
  136 0000005C F1BA 0F00       CMP              r10,#0x00
  137 00000060 D1FA            BNE              ReadState
  138 00000062 E00A            B                checkAppuisLong
  139 00000064         Debut
  140 00000064 F000 F813       BL               Clignotement
  141 00000068         
  142 00000068         ; eteindre les deux leds 
  143 00000068         ;str r2, [r6]
  144 00000068         moteur
  145 00000068         ; Activer les deux moteurs droit et gauche
  146 00000068 F7FF FFFE       BL               MOTEUR_DROIT_ON
  147 0000006C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  148 00000070         ; Evalbot avance droit devant
  149 00000070 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  150 00000074 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  151 00000078         
  152 00000078         ;BL WAIT ; BL (Branchement vers le lien WAIT); possibili
                       té de retour à la suite avec (BX LR)
  153 00000078         ;BL WAIT
  154 00000078         ;Rotation à droite de l'Evalbot pendant une demi-période
                        (1 seul WAIT)
  155 00000078         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  156 00000078         ;BL WAIT
  157 00000078         ;BL WAIT
  158 00000078         
  159 00000078         
  160 00000078         
  161 00000078         
  162 00000078         ; eteindre les deux leds 
  163 00000078         ;ldr r6, = GPIO_PORTF_BASE + (BROCHE4_5<<2)
  164 00000078         
  165 00000078         ;str r2, [r6]
  166 00000078         
  167 00000078         
  168 00000078         ; Avancement pendant une période (deux WAIT)
  169 00000078         ;BL WAIT ; BL (Branchement vers le lien WAIT); possibili
                       té de retour à la suite avec (BX LR)
  170 00000078         ;BL WAIT
  171 00000078         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  172 00000078         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  173 00000078         ;BL WAIT
  174 00000078         ;ldr r10,[r8]
  175 00000078         
  176 00000078 E7F6            b                moteur
  177 0000007A         
  178 0000007A F44F 217F 
                       checkAppuisLong
                               ldr              r1, =0xFF000 ; correspond à la 
                                                            duree de l'appuis l
                                                            ong 



ARM Macro Assembler    Page 6 


  179 0000007E         wait0
  180 0000007E F8D7 A000       ldr              r10,[r7]
  181 00000082 F1BA 0F00       CMP              r10,#0x00
  182 00000086 D1E7            BNE              ReadState   ; si l'utilisateur 
                                                            relâche pendant le 
                                                            wait  ei r10=0x01 ,
                                                             on recommence 
  183 00000088 3901            subs             r1, #1
  184 0000008A D1F8            bne              wait0
  185 0000008C E7EA            B                Debut
  186 0000008E         
  187 0000008E         Clignotement
  188 0000008E F04F 0408       ldr              r4, =0x8    ; durée de clignote
                                                            ment
  189 00000092         
  190 00000092 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  191 00000094         loop
  192 00000094 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  193 00000096 F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  194 0000009A         
  195 0000009A 3901    wait1   subs             r1, #1
  196 0000009C D1FD            bne              wait1
  197 0000009E         
  198 0000009E 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  199 000000A0 F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  200 000000A4         
  201 000000A4 3901    wait2   subs             r1, #1
  202 000000A6 D1FD            bne              wait2
  203 000000A8         
  204 000000A8 3C01            subs             r4, #1      ; contrôle le temp 
                                                            de clignotement 
  205 000000AA D1F3            bne              loop
  206 000000AC         
  207 000000AC 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  208 000000AE 4770            BX               LR
  209 000000B0         
  210 000000B0         
  211 000000B0         ;; Boucle d'attante
  212 000000B0 F44F 21A4 
                       WAIT    ldr              r1, =0x052000
  213 000000B4 3901    wait3   subs             r1, #1
  214 000000B6 D1FD            bne              wait3
  215 000000B8 4770            BX               LR
  216 000000BA         
  217 000000BA         
  218 000000BA BF00            NOP
  219 000000BC                 END



ARM Macro Assembler    Page 7 


              400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              40007510 
              4000751C 
              400250C0 
              40007100 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_priseenmain_moteurs.d -o.\objects\rk_priseenmain_mote
urs.o -I.\RTE\_Target_1 -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.
1\CMSIS\Core\Include -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\D
evice\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SE
TA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --pre
define="ARMCM3 SETA 1" --list=.\listings\rk_priseenmain_moteurs.lst RK_PriseEnM
ain_Moteurs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: .text unused
Clignotement 0000008E

Symbol: Clignotement
   Definitions
      At line 187 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 140 in file RK_PriseEnMain_Moteurs.s
Comment: Clignotement used once
Debut 00000064

Symbol: Debut
   Definitions
      At line 139 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 185 in file RK_PriseEnMain_Moteurs.s
Comment: Debut used once
ReadState 00000058

Symbol: ReadState
   Definitions
      At line 134 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 137 in file RK_PriseEnMain_Moteurs.s
      At line 182 in file RK_PriseEnMain_Moteurs.s

WAIT 000000B0

Symbol: WAIT
   Definitions
      At line 212 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: WAIT unused
__main 00000000

Symbol: __main
   Definitions
      At line 67 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 52 in file RK_PriseEnMain_Moteurs.s
Comment: __main used once
checkAppuisLong 0000007A

Symbol: checkAppuisLong
   Definitions
      At line 178 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 138 in file RK_PriseEnMain_Moteurs.s
Comment: checkAppuisLong used once
loop 00000094




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: loop
   Definitions
      At line 191 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 205 in file RK_PriseEnMain_Moteurs.s
Comment: loop used once
moteur 00000068

Symbol: moteur
   Definitions
      At line 144 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 176 in file RK_PriseEnMain_Moteurs.s
Comment: moteur used once
wait0 0000007E

Symbol: wait0
   Definitions
      At line 179 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 184 in file RK_PriseEnMain_Moteurs.s
Comment: wait0 used once
wait1 0000009A

Symbol: wait1
   Definitions
      At line 195 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 196 in file RK_PriseEnMain_Moteurs.s
Comment: wait1 used once
wait2 000000A4

Symbol: wait2
   Definitions
      At line 201 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 202 in file RK_PriseEnMain_Moteurs.s
Comment: wait2 used once
wait3 000000B4

Symbol: wait3
   Definitions
      At line 213 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 214 in file RK_PriseEnMain_Moteurs.s
Comment: wait3 used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 37 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: BROCHE0 unused
BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 39 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 98 in file RK_PriseEnMain_Moteurs.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 38 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: BROCHE1 unused
BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 35 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 82 in file RK_PriseEnMain_Moteurs.s
      At line 86 in file RK_PriseEnMain_Moteurs.s
      At line 90 in file RK_PriseEnMain_Moteurs.s
      At line 123 in file RK_PriseEnMain_Moteurs.s
      At line 124 in file RK_PriseEnMain_Moteurs.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 43 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 102 in file RK_PriseEnMain_Moteurs.s
      At line 106 in file RK_PriseEnMain_Moteurs.s

BROCHE_4 00000010

Symbol: BROCHE_4
   Definitions
      At line 33 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: BROCHE_4 unused
BROCHE_5 00000020

Symbol: BROCHE_5
   Definitions
      At line 34 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: BROCHE_5 unused
BROCHE_6 00000040

Symbol: BROCHE_6
   Definitions
      At line 41 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 127 in file RK_PriseEnMain_Moteurs.s
Comment: BROCHE_6 used once
BROCHE_7 00000080

Symbol: BROCHE_7
   Definitions
      At line 42 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: BROCHE_7 unused
DUREE 00080000

Symbol: DUREE
   Definitions
      At line 45 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 193 in file RK_PriseEnMain_Moteurs.s
      At line 199 in file RK_PriseEnMain_Moteurs.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 30 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 93 in file RK_PriseEnMain_Moteurs.s
      At line 101 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 27 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 85 in file RK_PriseEnMain_Moteurs.s
      At line 97 in file RK_PriseEnMain_Moteurs.s
      At line 105 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 19 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 81 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 23 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 89 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 16 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 101 in file RK_PriseEnMain_Moteurs.s
      At line 105 in file RK_PriseEnMain_Moteurs.s
      At line 127 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 14 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 93 in file RK_PriseEnMain_Moteurs.s
      At line 97 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 12 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 81 in file RK_PriseEnMain_Moteurs.s
      At line 85 in file RK_PriseEnMain_Moteurs.s
      At line 89 in file RK_PriseEnMain_Moteurs.s
      At line 124 in file RK_PriseEnMain_Moteurs.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 9 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 69 in file RK_PriseEnMain_Moteurs.s
Comment: SYSCTL_PERIPH_GPIO used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 59 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 58 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 149 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 60 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 57 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 56 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 146 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 65 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 64 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 150 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 66 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 63 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 62 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 147 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 54 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 119 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_INIT used once
11 symbols
379 symbols in table
