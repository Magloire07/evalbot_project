


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000         ; The GPIODATA register is the data register
   12 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   13 00000000         
   14 00000000         ; The GPIODATA register is the data register
   15 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   16 00000000         
   17 00000000         ; configure the corresponding pin to be an output
   18 00000000         ; all GPIO pins are inputs by default
   19 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   20 00000000         
   21 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   22 00000000         ; By default, all GPIO pins have 2-mA drive.
   23 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   24 00000000         
   25 00000000         ; Digital enable register
   26 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   27 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   28 00000000         
   29 00000000         ; Pul_up
   30 00000000 00000510 



ARM Macro Assembler    Page 2 


                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   31 00000000         
   32 00000000         ; Broches select
   33 00000000 00000010 
                       BROCHE_4
                               EQU              0x10        ; led1
   34 00000000 00000020 
                       BROCHE_5
                               EQU              0x20        ; led2 
   35 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5 0b0011
                                                            0000
   36 00000000         
   37 00000000 00000001 
                       BROCHE0 EQU              0x1         ; bumper_R
   38 00000000 00000002 
                       BROCHE1 EQU              0x2         ; bumper_L
   39 00000000 00000003 
                       BROCHE0_1
                               EQU              0x3         ; bumperR_L
   40 00000000         
   41 00000000                 ENTRY
   42 00000000                 EXPORT           __main
   43 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   44 00000000         ; ;;         
   45 00000000 4E2C            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   46 00000002 F04F 0030       mov              r0, #0x00000030 ;; Enable clock
                                                             sur GPIO E et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b110
                                                            000)
   47 00000006         ; ;;                              (GPIO::FEDCBA)
   48 00000006 6030            str              r0, [r6]
   49 00000008         
   50 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   51 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   52 0000000A BF00            nop
   53 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   54 0000000E         
   55 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   56 0000000E         
   57 0000000E 4E2A            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   58 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   59 00000014 6030            str              r0, [r6]



ARM Macro Assembler    Page 3 


   60 00000016         
   61 00000016 4E29            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   62 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   63 0000001C 6030            str              r0, [r6]
   64 0000001E         
   65 0000001E 4E28            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   66 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   67 00000024 6030            str              r0, [r6]
   68 00000026         
   69 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
   70 0000002A         
   71 0000002A         ; allumer la led broche 4 (BROCHE4_5)
   72 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
   73 0000002E         
   74 0000002E 4E25            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; pour allumer les
                                                             deux leds 
   75 00000030         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
   76 00000030         
   77 00000030         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED1   
   78 00000030         
   79 00000030 4C25            ldr              r4, = GPIO_PORTF_BASE + (BROCHE
_4<<2) 
                                                            ;; pour allumer la 
                                                            led4
   80 00000032         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
   81 00000032         
   82 00000032         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED2
   83 00000032         
   84 00000032 4D26            ldr              r5, = GPIO_PORTF_BASE + (BROCHE
_5<<2) 
                                                            ;; 
   85 00000034         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED
   86 00000034         
   87 00000034         
   88 00000034         
   89 00000034         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper0_1
   90 00000034 4F26            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
   91 00000036 F04F 0003       ldr              r0, = BROCHE0_1
   92 0000003A 6038            str              r0, [r7]
   93 0000003C         
   94 0000003C 4F25            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   95 0000003E F04F 0003       ldr              r0, = BROCHE0_1



ARM Macro Assembler    Page 4 


   96 00000042 6038            str              r0, [r7]
   97 00000044         
   98 00000044         
   99 00000044 4F24            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  100 00000046         
  101 00000046 F8DF 8094       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  102 0000004A         
  103 0000004A         
  104 0000004A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration 
  105 0000004A         
  106 0000004A         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
  107 0000004A                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
  108 0000004A         
  109 0000004A                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
  110 0000004A                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  111 0000004A                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
  112 0000004A                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
  113 0000004A                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
  114 0000004A         
  115 0000004A                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
  116 0000004A                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  117 0000004A                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
  118 0000004A                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
  119 0000004A                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
  120 0000004A         
  121 0000004A         
  122 0000004A         
  123 0000004A         __main
  124 0000004A         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
  125 0000004A         ; ;;         
  126 0000004A 4E1A            ldr              r6, = SYSCTL_PERIPH_GPIO 



ARM Macro Assembler    Page 5 


                                                            ;; RCGC2
  127 0000004C F04F 0030       mov              r0, #0x00000030 ;; Enable clock
                                                             sur GPIO E et F où
                                                             sont branchés les 
                                                            leds (0x28 == 0b110
                                                            000)
  128 00000050         ; ;;                              (GPIO::FEDCBA)
  129 00000050 6030            str              r0, [r6]
  130 00000052         
  131 00000052         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
  132 00000052 BF00            nop                          ;; tres tres import
                                                            ant....
  133 00000054 BF00            nop
  134 00000056 BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
  135 00000058         
  136 00000058         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
  137 00000058         
  138 00000058 4E17            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
  139 0000005A F04F 0030       ldr              r0, = BROCHE4_5
  140 0000005E 6030            str              r0, [r6]
  141 00000060         
  142 00000060 4E16            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  143 00000062 F04F 0030       ldr              r0, = BROCHE4_5
  144 00000066 6030            str              r0, [r6]
  145 00000068         
  146 00000068 4E15            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  147 0000006A F04F 0030       ldr              r0, = BROCHE4_5
  148 0000006E 6030            str              r0, [r6]
  149 00000070         
  150 00000070 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  151 00000074         
  152 00000074         ; allumer la led broche 4 (BROCHE4_5)
  153 00000074 F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  154 00000078         
  155 00000078 4E12            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; pour allumer les
                                                             deux leds 
  156 0000007A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
  157 0000007A         
  158 0000007A         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED1   
  159 0000007A         



ARM Macro Assembler    Page 6 


  160 0000007A 4C13            ldr              r4, = GPIO_PORTF_BASE + (BROCHE
_4<<2) 
                                                            ;; pour allumer la 
                                                            led4
  161 0000007C         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
  162 0000007C         
  163 0000007C         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED2
  164 0000007C         
  165 0000007C 4D13            ldr              r5, = GPIO_PORTF_BASE + (BROCHE
_5<<2) 
                                                            ;; 
  166 0000007E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED
  167 0000007E         
  168 0000007E         
  169 0000007E         
  170 0000007E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper0_1
  171 0000007E 4F14            ldr              r7, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  172 00000080 F04F 0003       ldr              r0, = BROCHE0_1
  173 00000084 6038            str              r0, [r7]
  174 00000086         
  175 00000086 4F13            ldr              r7, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  176 00000088 F04F 0003       ldr              r0, = BROCHE0_1
  177 0000008C 6038            str              r0, [r7]
  178 0000008E         
  179 0000008E         
  180 0000008E 4F12            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  181 00000090         
  182 00000090 F8DF 8048       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  183 00000094         
  184 00000094         
  185 00000094         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration 
  186 00000094         
  187 00000094         ;; BL Branchement vers un lien (sous programme)
  188 00000094         
  189 00000094         ; Configure les PWM + GPIO
  190 00000094 F7FF FFFE       BL               MOTEUR_INIT
  191 00000098         
  192 00000098         ; Activer les deux moteurs droit et gauche
  193 00000098 F7FF FFFE       BL               MOTEUR_DROIT_ON
  194 0000009C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  195 000000A0         
  196 000000A0         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  197 000000A0         loop
  198 000000A0         ; Evalbot avance droit devant
  199 000000A0 F7FF FFFE       BL               MOTEUR_DROIT_AVANT



ARM Macro Assembler    Page 7 


  200 000000A4         ;BL MOTEUR_GAUCHE_AVANT
  201 000000A4         
  202 000000A4         ; Avancement pendant une période (deux WAIT)
  203 000000A4         ;BL WAIT ; BL (Branchement vers le lien WAIT); possibili
                       té de retour à la suite avec (BX LR)
  204 000000A4         ;BL WAIT
  205 000000A4         
  206 000000A4         ; Rotation à droite de l'Evalbot pendant une demi-périod
                       e (1 seul WAIT)
  207 000000A4         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  208 000000A4         
  209 000000A4         ;BL WAIT
  210 000000A4         ;ldr r10,[r8]
  211 000000A4         
  212 000000A4 E7FC            b                loop
  213 000000A6         ;; Boucle d'attante
  214 000000A6 490E    WAIT    ldr              r1, =0xAFFFFF
  215 000000A8 3901    wait1   subs             r1, #1
  216 000000AA F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  217 000000AE D1FB            bne              wait1
  218 000000B0 4770            BX               LR
  219 000000B2         
  220 000000B2         
  221 000000B2 BF00            NOP
  222 000000B4                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              40025040 
              40025080 
              40024510 
              4002451C 
              40024004 
              40024008 
              00AFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_priseenmain_moteurs.d -o.\objects\rk_priseenmain_mote
urs.o -I.\RTE\_Target_1 -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.
1\CMSIS\Core\Include -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\D
evice\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SE
TA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --pre
define="ARMCM3 SETA 1" --list=.\listings\rk_priseenmain_moteurs.lst RK_PriseEnM
ain_Moteurs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: .text unused
WAIT 000000A6

Symbol: WAIT
   Definitions
      At line 214 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: WAIT unused
__main 0000004A

Symbol: __main
   Definitions
      At line 123 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 42 in file RK_PriseEnMain_Moteurs.s
Comment: __main used once
loop 000000A0

Symbol: loop
   Definitions
      At line 197 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 212 in file RK_PriseEnMain_Moteurs.s
Comment: loop used once
wait1 000000A8

Symbol: wait1
   Definitions
      At line 215 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 217 in file RK_PriseEnMain_Moteurs.s
Comment: wait1 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 37 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 99 in file RK_PriseEnMain_Moteurs.s
      At line 180 in file RK_PriseEnMain_Moteurs.s

BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 39 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 91 in file RK_PriseEnMain_Moteurs.s
      At line 95 in file RK_PriseEnMain_Moteurs.s
      At line 172 in file RK_PriseEnMain_Moteurs.s
      At line 176 in file RK_PriseEnMain_Moteurs.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 38 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 101 in file RK_PriseEnMain_Moteurs.s
      At line 182 in file RK_PriseEnMain_Moteurs.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 35 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 58 in file RK_PriseEnMain_Moteurs.s
      At line 62 in file RK_PriseEnMain_Moteurs.s
      At line 66 in file RK_PriseEnMain_Moteurs.s
      At line 72 in file RK_PriseEnMain_Moteurs.s
      At line 74 in file RK_PriseEnMain_Moteurs.s
      At line 139 in file RK_PriseEnMain_Moteurs.s
      At line 143 in file RK_PriseEnMain_Moteurs.s
      At line 147 in file RK_PriseEnMain_Moteurs.s
      At line 153 in file RK_PriseEnMain_Moteurs.s
      At line 155 in file RK_PriseEnMain_Moteurs.s

BROCHE_4 00000010

Symbol: BROCHE_4
   Definitions
      At line 33 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 79 in file RK_PriseEnMain_Moteurs.s
      At line 160 in file RK_PriseEnMain_Moteurs.s

BROCHE_5 00000020

Symbol: BROCHE_5
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 34 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 84 in file RK_PriseEnMain_Moteurs.s
      At line 165 in file RK_PriseEnMain_Moteurs.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 30 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 90 in file RK_PriseEnMain_Moteurs.s
      At line 171 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 27 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 61 in file RK_PriseEnMain_Moteurs.s
      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 142 in file RK_PriseEnMain_Moteurs.s
      At line 175 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 19 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 57 in file RK_PriseEnMain_Moteurs.s
      At line 138 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 23 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 65 in file RK_PriseEnMain_Moteurs.s
      At line 146 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 15 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 90 in file RK_PriseEnMain_Moteurs.s
      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 99 in file RK_PriseEnMain_Moteurs.s
      At line 101 in file RK_PriseEnMain_Moteurs.s
      At line 171 in file RK_PriseEnMain_Moteurs.s
      At line 175 in file RK_PriseEnMain_Moteurs.s
      At line 180 in file RK_PriseEnMain_Moteurs.s
      At line 182 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTF_BASE 40025000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_BASE
   Definitions
      At line 12 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 57 in file RK_PriseEnMain_Moteurs.s
      At line 61 in file RK_PriseEnMain_Moteurs.s
      At line 65 in file RK_PriseEnMain_Moteurs.s
      At line 74 in file RK_PriseEnMain_Moteurs.s
      At line 79 in file RK_PriseEnMain_Moteurs.s
      At line 84 in file RK_PriseEnMain_Moteurs.s
      At line 138 in file RK_PriseEnMain_Moteurs.s
      At line 142 in file RK_PriseEnMain_Moteurs.s
      At line 146 in file RK_PriseEnMain_Moteurs.s
      At line 155 in file RK_PriseEnMain_Moteurs.s
      At line 160 in file RK_PriseEnMain_Moteurs.s
      At line 165 in file RK_PriseEnMain_Moteurs.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 9 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 45 in file RK_PriseEnMain_Moteurs.s
      At line 126 in file RK_PriseEnMain_Moteurs.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 112 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 111 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 199 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 113 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 110 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 109 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 193 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 118 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 216 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 117 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_AVANT unused
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 119 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 116 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 115 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 194 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 107 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 190 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_INIT used once
11 symbols
366 symbols in table
