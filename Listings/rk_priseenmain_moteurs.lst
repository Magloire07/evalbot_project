


ARM Macro Assembler    Page 1 


    1 00000000         ;-------------------------------------------------------
                       -----
    2 00000000         ;#Authors
    3 00000000         ;@Kokou KOMBEDE
    4 00000000         ;@Ounissa SADAOUI
    5 00000000         ;Parcours E3FI-3I
    6 00000000         ;année 2024-2025
    7 00000000         ;-------------------------------------------------------
                       ------
    8 00000000         ; RK - Evalbot (Cortex M3 de Texas Instrument)
    9 00000000         ; programme - Pilotage  Evalbot pour parcouris un labyri
                       nthe
   10 00000000         ;-------------------------------------------------------
                       -------
   11 00000000         
   12 00000000                 AREA             |.text|, CODE, READONLY
   13 00000000         
   14 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   15 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   16 00000000         
   17 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            
   18 00000000         
   19 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   20 00000000         
   21 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   22 00000000         
   23 00000000         ; configure the corresponding pin to be an output
   24 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   25 00000000         
   26 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   27 00000000         ; By default, all GPIO pins have 2-mA drive.
   28 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   29 00000000         
   30 00000000         ; Digital enable register



ARM Macro Assembler    Page 2 


   31 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   32 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   33 00000000         
   34 00000000         ; Pul_up
   35 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   36 00000000         
   37 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^DECLARATION PINS ou BROCH
                       ES ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   38 00000000         ; LED
   39 00000000 00000010 
                       BROCHE_4
                               EQU              0x10        ; led1
   40 00000000 00000020 
                       BROCHE_5
                               EQU              0x20        ; led2 
   41 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5 0b0011
                                                            0000
   42 00000000         ; BUMPER
   43 00000000 00000001 
                       BROCHE0 EQU              0x1         ; bumper_R
   44 00000000 00000002 
                       BROCHE1 EQU              0x2         ; bumper_L
   45 00000000 00000003 
                       BROCHE0_1
                               EQU              0x3         ; bumperR_L
   46 00000000         ; SWITCH
   47 00000000 00000040 
                       BROCHE_6
                               EQU              0x40        ; switch1
   48 00000000 00000080 
                       BROCHE_7
                               EQU              0x80        ; switch2 
   49 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; sw1 et sw2
   50 00000000         
   51 00000000 00080000 
                       DUREE   EQU              0x80000     ; durée fréquence c
                                                            lignotement multipl
                                                            e  
   52 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   53 00000000         ;; registres utilisés 
   54 00000000         ;;---------------------------------------------
   55 00000000         ;;   R0  R1 R2  R3  R4  R5  R6  R7 R8  R9 R10
   56 00000000         ;;---------------------------------------------
   57 00000000         ;; registres réservés 



ARM Macro Assembler    Page 3 


   58 00000000         ;;---------------------------------------------
   59 00000000         ;;  R2  R5  R9 R11
   60 00000000         ;;---------------------------------------------
   61 00000000         ;; usages courants des régistres
   62 00000000         ;;---------------------------------------
   63 00000000         ;; r3,r2,r6 pour lire les pins de leds et allumer puis é
                       teindre
   64 00000000         ;; r7,r8,r10 pour lire les pins des switchs et bumpers 
   65 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   66 00000000                 ENTRY
   67 00000000                 EXPORT           __main
   68 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   69 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   70 00000000         
   71 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   72 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   73 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   74 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   75 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   76 00000000         
   77 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   78 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   79 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   80 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   81 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   82 00000000         
   83 00000000                 IMPORT           MOTEUR_DROIT_MIN
   84 00000000                 IMPORT           MOTEUR_GAUCHE_MIN
   85 00000000                 IMPORT           WAIT_MIN
   86 00000000                 IMPORT           MOTEUR_DROIT_MAX
   87 00000000                 IMPORT           MOTEUR_GAUCHE_MAX
   88 00000000         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   89 00000000         __main
   90 00000000         
   91 00000000 F8DF 9248       LDR              R9, =buffer ; Charger l'adresse
                                                             de buffer dans R0
   92 00000004 F04F 0200       mov              r2, #0x000  ; pour eteindre LED
                                                            



ARM Macro Assembler    Page 4 


   93 00000008 F04F 0500       mov              R5, #0      ; compteur de d'ind
                                                            ice dans la tableau
                                                             lors de l'écriture
                                                             elle vaudra aussi 
                                                            pour taille du tabl
                                                            eau 
   94 0000000C F04F 0B00       mov              R11,#0      ; compteur de d'ind
                                                            ice dans la tableau
                                                             lors de la lecture
                                                            
   95 00000010         
   96 00000010         
   97 00000010         
   98 00000010 4E8F            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   99 00000012 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO E , F  et
                                                             D où sont branchés
                                                             les leds (0x28 == 
                                                            0b111000)
  100 00000016 6030            str              r0, [r6]
  101 00000018         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
  102 00000018 BF00            nop                          ;; tres tres import
                                                            ant....
  103 0000001A BF00            nop
  104 0000001C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
  105 0000001E         
  106 0000001E         
  107 0000001E         ;--------------------------------------------------CONFI
                       GURATION LED 4_5----------------------------------------
                       ------------------------------     
  108 0000001E         
  109 0000001E 4E8D            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
  110 00000020 F04F 0030       ldr              r0, = BROCHE4_5
  111 00000024 6030            str              r0, [r6]
  112 00000026         
  113 00000026 4E8C            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  114 00000028 F04F 0030       ldr              r0, = BROCHE4_5
  115 0000002C 6030            str              r0, [r6]
  116 0000002E         
  117 0000002E 4E8B            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
  118 00000030 F04F 0030       ldr              r0, = BROCHE4_5
  119 00000034 6030            str              r0, [r6]
  120 00000036         ;-------------------------------------------------------
                       CONFIGURATION Bumper0_1---------------------------------



ARM Macro Assembler    Page 5 


                       --------------------------------
  121 00000036 4E8A            ldr              r6, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  122 00000038 F04F 0003       ldr              r0, = BROCHE0_1
  123 0000003C 6030            str              r0, [r6]
  124 0000003E         
  125 0000003E 4E89            ldr              r6, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ; Enable Digital Fu
                                                            nction 
  126 00000040 F04F 0003       ldr              r0, = BROCHE0_1
  127 00000044 6030            str              r0, [r6]
  128 00000046         ;-------------------------------------------------------
                       CONFIGURATION Switch6_7---------------------------------
                       --------------------------------
  129 00000046 4E88            ldr              r6, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ; Pul_up 
  130 00000048 F04F 00C0       ldr              r0, = BROCHE6_7
  131 0000004C 6030            str              r0, [r6]
  132 0000004E         
  133 0000004E 4E87            ldr              r6, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  134 00000050 F04F 00C0       ldr              r0, = BROCHE6_7
  135 00000054 6030            str              r0, [r6]
  136 00000056         
  137 00000056         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------   
  138 00000056         ; Configure les PWM + GPIO
  139 00000056 F7FF FFFE       BL               MOTEUR_INIT
  140 0000005A         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------   
  141 0000005A         ; allumage des deux leds
  142 0000005A F04F 0330       mov              r3, #BROCHE4_5
  143 0000005E 4E84            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  144 00000060 6033            str              r3, [r6]
  145 00000062         
  146 00000062         ;---------------------------------------------LECTURE DU
                        PREMIER APPUIS LONG -----------------------------------
                       -----------------------------------     
  147 00000062         ReadState
  148 00000062 4F84            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  149 00000064 F8D7 A000       ldr              r10,[r7]
  150 00000068 F1BA 0F00       CMP              r10,#0x00
  151 0000006C D1F9            BNE              ReadState
  152 0000006E E03D            B                checkAppuisLong
  153 00000070         ;----------------------------------------------DEBUIT PR
                       OGRAMMATION DES DIRECTIONS -----------------------------
                       ---------------------------------------------   
  154 00000070         DebutProgrammation
  155 00000070 F000 F863       BL               Clignotement
  156 00000074         ReadGauche



ARM Macro Assembler    Page 6 


  157 00000074 4F7F            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2) 
                                                            ; affectation du sw
                                                            itch 1 
  158 00000076 F8D7 A000       ldr              r10,[r7]    ; lecture de l'état
                                                             du switch 1
  159 0000007A F1BA 0F00       CMP              r10,#0x00   ; vérifier si c'est
                                                             appuyé
  160 0000007E D108            BNE              ReadDroit   ; on  branche vers 
                                                            le switch1( gauche)
                                                             pour tester  si ja
                                                            mais le droit n'est
                                                             pas appuyé 
  161 00000080 E03F            B                checkAppuisLongGauche ; on véri
                                                            fie si l'appuis est
                                                             long
  162 00000082         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  163 00000082         appuisCourtGauche
  164 00000082         ; on allume la led gauche pour signaler le clic 
  165 00000082 F04F 0320       mov              r3, #BROCHE_5
  166 00000086 4E7C            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
_5<<2)
  167 00000088 F000 F851       BL               clignoteAuClic 
                                                            ; gère l'allumage
  168 0000008C         
  169 0000008C         ; on définit l'entier correspondant à la direction gauch
                       e 
  170 0000008C F04F 0A01       mov              r10,#1      ; 1 pour  gauche 
  171 00000090 E027            B                ecrireDirection ; écrir dans bu
                                                            ffer la direction 
  172 00000092         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  173 00000092         ReadDroit
  174 00000092 4F7A            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_7<<2)
  175 00000094 F8D7 A000       ldr              r10,[r7]
  176 00000098 F1BA 0F00       CMP              r10,#0x00
  177 0000009C D1EA            BNE              ReadGauche
  178 0000009E E03B            B                checkAppuisLongDroit ; on vérif
                                                            i si l'appuis est l
                                                            ong ou court
  179 000000A0         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  180 000000A0         appuisCourtDroit                     ; si on arrive à ce
                                                            tte étiquette alors
                                                             l'appuis est court
                                                            
  181 000000A0         ; on allume la led droite pour signaler le clic 
  182 000000A0 F04F 0310       mov              r3, #BROCHE_4
  183 000000A4 4E76            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
_4<<2)
  184 000000A6 F000 F842       BL               clignoteAuClic 
                                                            ; gère l'allumage
  185 000000AA         
  186 000000AA         ; on définit l'entier correspondant à la direction gauch



ARM Macro Assembler    Page 7 


                       e 
  187 000000AA F04F 0A02       mov              r10,#2      ; 2 pour  droite 
  188 000000AE E018            B                ecrireDirection ; écrir dans ta
                                                            bleau la direction 
                                                            
  189 000000B0         
  190 000000B0         ;------------------------------------------------FIN PRO
                       GRAMMATION DES DIRECTIONS-------------------------------
                       ---------------------------------
  191 000000B0         ; le programme est enregistré maintemant
  192 000000B0         ; on peut parcourir le labyrinthe
  193 000000B0         FinProgrammation
  194 000000B0         ; on on clignote pour signaler fin de la programmation 
  195 000000B0 F04F 0330       mov              r3, #BROCHE4_5
  196 000000B4 4E6E            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  197 000000B6 F000 F840       BL               Clignotement
  198 000000BA         
  199 000000BA         ;------------------------------------------------CLIC SU
                       R SWITCH1 POUR COMMENCER--------------------------------
                       --------------------------------
  200 000000BA         attenteDemarrage
  201 000000BA 4F6E            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  202 000000BC F8D7 A000       ldr              r10,[r7]
  203 000000C0 F1BA 0F00       CMP              r10,#0x00
  204 000000C4 D1F9            BNE              attenteDemarrage
  205 000000C6 F000 F832       BL               clignoteAuClic
  206 000000CA F000 F84A       BL               WAIT
  207 000000CE         ;---------------------------------------------------PARC
                       OURS DU LABYRINTHE--------------------------------------
                       -----------------------  
  208 000000CE         
  209 000000CE         
  210 000000CE         
  211 000000CE         
  212 000000CE         
  213 000000CE         parcours
  214 000000CE         ; Activer les deux moteurs droit et gauche
  215 000000CE F7FF FFFE       BL               MOTEUR_DROIT_ON
  216 000000D2 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  217 000000D6         ; Evalbot avance droit devant
  218 000000D6 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  219 000000DA F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  220 000000DE         
  221 000000DE E045            B                testCollision
  222 000000E0         
  223 000000E0 E7F5            b                parcours
  224 000000E2         
  225 000000E2         
  226 000000E2         
  227 000000E2         
  228 000000E2         ;-----------------------------------------------FIN PARC
                       OURS DU LABYRINTHE--------------------------------------
                       -----------------------------------  
  229 000000E2         
  230 000000E2         ecrireDirection
  231 000000E2 F809 A005       STRB             R10, [R9, R5] ; écrire dans le 
                                                            tableau à l'indice 



ARM Macro Assembler    Page 8 


                                                            indiqué par R5
  232 000000E6 F105 0501       ADD              R5,#1       ; incrémentation du
                                                             compteur 
  233 000000EA E7C3            B                ReadGauche  ; on retourne à la 
                                                            lecture des directi
                                                            on 
  234 000000EC         
  235 000000EC         ;-----------------------------------------------DEBUT LO
                       GIQUE APUIS LONG ---------------------------------------
                       ---------------------------------- 
  236 000000EC         ;dureé R1 correspond à la duree 
  237 000000EC         ;de l'appuis long  envirion 2seconde
  238 000000EC F44F 217F 
                       checkAppuisLong
                               ldr              r1, =0xFF000
  239 000000F0         wait0
  240 000000F0 4F60            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  241 000000F2 F8D7 A000       ldr              r10,[r7]
  242 000000F6 F1BA 0F00       CMP              r10,#0x00
  243 000000FA D1B2            BNE              ReadState   ; si l'utilisateur 
                                                            relâche pendant le 
                                                            wait  c'est à dire 
                                                             r10=0x01 , on reco
                                                            mmence 
  244 000000FC 3901            subs             r1, #1
  245 000000FE D1F7            bne              wait0
  246 00000100 E7B6            B                DebutProgrammation
  247 00000102         
  248 00000102         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  249 00000102         checkAppuisLongGauche
  250 00000102 F44F 217F       ldr              r1, =0xFF000 ; R1 correspond à 
                                                            la duree de l'appui
                                                            s long 
  251 00000106         wait01
  252 00000106 4F5B            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_6<<2)
  253 00000108 F8D7 A000       ldr              r10,[r7]
  254 0000010C F1BA 0F00       CMP              r10,#0x00
  255 00000110 D1B7            BNE              appuisCourtGauche ; si l'utilis
                                                            ateur relâche penda
                                                            nt le wait  c'est-à
                                                            -dire  r10=0x01 , c
                                                            'est un appuis cour
                                                            t sur gauche 
  256 00000112 3901            subs             r1, #1      ; sinon on continue
                                                             de lire dans que d
                                                            urée n'est pas acro
                                                            ulé
  257 00000114 D1F7            bne              wait01
  258 00000116 E7CB            B                FinProgrammation ; si on arrive
                                                             ici alor l'appuis 
                                                            est long donc c'est
                                                             la fin de la progr
                                                            ammation 
  259 00000118         ;-------------------------------------------------------
                       --------------------------------------------------------



ARM Macro Assembler    Page 9 


                       ---------
  260 00000118         checkAppuisLongDroit
  261 00000118 F44F 217F       ldr              r1, =0xFF000 ; correspond à la 
                                                            duree de l'appuis l
                                                            ong 
  262 0000011C         wait02
  263 0000011C 4F57            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
_7<<2)
  264 0000011E F8D7 A000       ldr              r10,[r7]
  265 00000122 F1BA 0F00       CMP              r10,#0x00
  266 00000126 D1BB            BNE              appuisCourtDroit ; si l'utilisa
                                                            teur relâche pendan
                                                            t le wait  c'est-à-
                                                            dire r10=0x01 , c'e
                                                            st un appuis court 
                                                            sur droit
  267 00000128 3901            subs             r1, #1
  268 0000012A D1F7            bne              wait02
  269 0000012C E7C0            B                FinProgrammation
  270 0000012E         ;------------------------------------------------DEBUT L
                       OGIQUES DE CLIGNOTEMENTS -------------------------------
                       -----------------------------------------
  271 0000012E         ; logique du clignote simple  à chaque touche 
  272 0000012E         clignoteAuClic
  273 0000012E 4955            ldr              r1, =0xFFFFF ; durée d'allumage
                                                            
  274 00000130 6033            str              r3, [r6]    ; allumer la led co
                                                            rrespondant dans R3
                                                            
  275 00000132 3901    wait21  subs             r1, #1
  276 00000134 D1FD            bne              wait21
  277 00000136 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  278 00000138 4770            BX               LR          ;; retour à l'endro
                                                            it ou clignoteAuCli
                                                            c est appeler 
  279 0000013A         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  280 0000013A         ; logique de clignotement multiple   avant et apprès le 
                       programmation 
  281 0000013A         Clignotement
  282 0000013A F04F 0408       ldr              r4, =0x8    ; durée de clignote
                                                            ment
  283 0000013E F04F 0330       mov              r3, #BROCHE4_5
  284 00000142 4E4B            ldr              r6, = GPIO_PORTF_BASE + (BROCHE
4_5<<2)
  285 00000144 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  286 00000146         loop
  287 00000146 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  288 00000148 F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  289 0000014C         
  290 0000014C 3901    wait1   subs             r1, #1



ARM Macro Assembler    Page 10 


  291 0000014E D1FD            bne              wait1
  292 00000150         
  293 00000150 6033            str              r3, [r6]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  294 00000152 F44F 2100       ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  295 00000156         
  296 00000156 3901    wait2   subs             r1, #1
  297 00000158 D1FD            bne              wait2
  298 0000015A         
  299 0000015A 3C01            subs             r4, #1      ; contrôle le temp 
                                                            de clignotement 
  300 0000015C D1F3            bne              loop
  301 0000015E         
  302 0000015E 6032            str              r2, [r6]    ;; Eteint LED car r
                                                            2 = 0x00      
  303 00000160 4770            BX               LR
  304 00000162         ;-------------------------------------------------------
                       --------------------------------------------------------
                       ---------
  305 00000162         ;; Boucle d'attente   simple  sans rien faire 
  306 00000162 F44F 0120 
                       WAIT    ldr              r1, =0xA00000
  307 00000166 3901    wait3   subs             r1, #1
  308 00000168 D1FD            bne              wait3
  309 0000016A 4770            BX               LR
  310 0000016C         ;----------------------------------TEST DE COLLISION ---
                       --------------------------------------------------------
                       ---------------------------
  311 0000016C         
  312 0000016C         testCollision
  313 0000016C 4F46            ldr              r7, = GPIO_PORTE_BASE + (BROCHE
0<<2)
  314 0000016E F8DF 811C       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
1<<2)
  315 00000172         
  316 00000172 F8D8 A000       ldr              r10,[r8]    ; lecture de l'état
                                                             du bp_0
  317 00000176 683C            ldr              r4,[r7]     ; lecture de l'état
                                                             du bp_1
  318 00000178 F1BA 0F00       CMP              r10,#0x00
  319 0000017C D106            BNE              testBp1
  320 0000017E F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  321 00000182 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  322 00000186 F7FF FFD8       BL               Clignotement ; on clignote à ch
                                                            aque collision 
  323 0000018A E008            B                lectureMemoire
  324 0000018C         
  325 0000018C         
  326 0000018C         testBp1
  327 0000018C 2C00            CMP              r4,#0x00
  328 0000018E D19E            BNE              parcours
  329 00000190 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche



ARM Macro Assembler    Page 11 


  330 00000194 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  331 00000198 F7FF FFCF       BL               Clignotement ; on clignote à ch
                                                            aque collision
  332 0000019C         
  333 0000019C E7FF            B                lectureMemoire
  334 0000019E         ;----------------------------------LECTURE  MEMOIRE ----
                       --------------------------------------------------------
                       --------------------------
  335 0000019E         lectureMemoire
  336 0000019E F819 400B       LDRB             R4, [R9, R11] ; Charger l'octet
                                                             suivant dans R4 (b
                                                            uffer[R11])
  337 000001A2 2C01            CMP              R4, #1
  338 000001A4 D100            BNE              tourneADroite ; si 2 tourne à d
                                                            roite R4 vaut 2 dan
                                                            s ce cas 
  339 000001A6 E00C            B                tourneAGauche ; sinon tourne à 
                                                            gauche  R4 vaut 1 d
                                                            ans ce cas
  340 000001A8         
  341 000001A8         ;----------------------------------TOURNE A DROITE OU GA
                       UCHE  --------------------------------------------------
                       ------------------------------------
  342 000001A8         tourneADroite
  343 000001A8 F7FF FFFE       BL               MOTEUR_DROIT_ON
  344 000001AC F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  345 000001B0 F7FF FFD7       BL               WAIT        ; le WAIT et la vit
                                                            esse sont réglés po
                                                            ur produire un angl
                                                            e de 90° 
  346 000001B4 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  347 000001B8 F10B 0B01       ADD              R11,#1      ; incrémentation po
                                                            ur la prochaine dir
                                                            ection 
  348 000001BC 45AB            CMP              R11,R5      ; on vérifie si tou
                                                            t le programme a ét
                                                            é lu 
  349 000001BE D00D            BEQ              fin         ; c'est la fin si o
                                                            ui 
  350 000001C0 E785            B                parcours    ; on continue le pa
                                                            rcours si non 
  351 000001C2         tourneAGauche
  352 000001C2 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  353 000001C6 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  354 000001CA F7FF FFCA       BL               WAIT        ; le WAIT et la vit
                                                            esse sont réglés po
                                                            ur produire un angl
                                                            e de 90° 
  355 000001CE F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur droit
  356 000001D2 F10B 0B01       ADD              R11,#1      ; incrémentation po
                                                            ur la prochaine dir
                                                            ection 
  357 000001D6 45AB            CMP              R11,R5      ; on vérifie si tou
                                                            t le programme a ét
                                                            é lu 
  358 000001D8 D000            BEQ              fin         ; c'est la fin si o



ARM Macro Assembler    Page 12 


                                                            ui 
  359 000001DA E778            B                parcours    ; on continue le pa
                                                            rcours si non 
  360 000001DC         
  361 000001DC         fin
  362 000001DC F7FF FFFE       BL               MOTEUR_DROIT_ON
  363 000001E0 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  364 000001E4 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  365 000001E8 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  366 000001EC F7FF FFB9       BL               WAIT
  367 000001F0         ;BL   MOTEUR_GAUCHE_OFF   ; déactiver le moteur gauche
  368 000001F0         ;BL   MOTEUR_DROIT_OFF   ; déactiver le moteur droit
  369 000001F0 F7FF FFA3       BL               Clignotement
  370 000001F4 F7FF FFA1       BL               Clignotement
  371 000001F8         
  372 000001F8         ;-------------------------------------------------------
                       --------------------------------------------------------
                       -----------------------------------------
  373 000001F8         
  374 000001F8         
  375 000001F8         INFINI
  376 000001F8         
  377 000001F8         
  378 000001F8         ; Faire un arc de cercle vers la gauche (virage à gauche
                       )
  379 000001F8         ; Moteur droit à pleine vitesse, moteur gauche réduit
  380 000001F8 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  381 000001FC F7FF FFFE       BL               MOTEUR_GAUCHE_MIN
  382 00000200 F7FF FFAF       BL               WAIT
  383 00000204 F7FF FFAD       BL               WAIT
  384 00000208 F7FF FFAB       BL               WAIT
  385 0000020C F7FF FFA9       BL               WAIT
  386 00000210         
  387 00000210         ; Effectuer un virage vers la droite pour revenir à la l
                       igne droite
  388 00000210         ; Moteur gauche à pleine vitesse, moteur droit réduit
  389 00000210         
  390 00000210         
  391 00000210         
  392 00000210         
  393 00000210         
  394 00000210 F7FF FFFE       BL               MOTEUR_DROIT_MAX
  395 00000214 F7FF FFFE       BL               MOTEUR_GAUCHE_MAX
  396 00000218 F7FF FFA3       BL               WAIT
  397 0000021C         
  398 0000021C         
  399 0000021C         ; Répéter l'arc de cercle vers la gauche (virage à gauch
                       e)
  400 0000021C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  401 00000220 F7FF FFFE       BL               MOTEUR_DROIT_MIN
  402 00000224 F7FF FF9D       BL               WAIT
  403 00000228 F7FF FF9B       BL               WAIT
  404 0000022C F7FF FF99       BL               WAIT
  405 00000230         
  406 00000230         ; Répéter le virage vers la droite
  407 00000230         
  408 00000230         
  409 00000230 F7FF FFFE       BL               MOTEUR_DROIT_MAX
  410 00000234 F7FF FFFE       BL               MOTEUR_GAUCHE_MAX



ARM Macro Assembler    Page 13 


  411 00000238 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  412 0000023C F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  413 00000240         
  414 00000240         
  415 00000240 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
  416 00000244 F7FF FFFE       BL               MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
  417 00000248         
  418 00000248         ; Fin de INFINI
  419 00000248         
  420 00000248         END
  421 00000248         ;-------------------------------------------------------
                       --------------------------------------------------------
                       -----------------------------------------------
  422 00000248         
  423 00000248         
  424 00000248         ;--------------------------------------------------DECLA
                       RATION TABLEAU CONTENANT LE PROGRAMME ------------------
                       --------------------------------------------------------
                       ----
  425 00000248         
  426 00000248 BF00            NOP
  427 0000024A         
  428 0000024A 00 00 00000000 
              400FE108 
              40025400 
              4002551C 
              40025500 
              40024510 
              4002451C 
              40007510 
              4000751C 
              400250C0 
              40007100 
              40025080 
              40007200 
              40025040 
              000FFFFF 
              40024004 
              40024008         AREA             |variable|, DATA, READWRITE
  429 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    buffer  space            50          ;   tableau de 50 o
                                                            ctets pour contenir



ARM Macro Assembler    Page 14 


                                                             les instructions 
  430 00000032                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_priseenmain_moteurs.d -o.\objects\rk_priseenmain_mote
urs.o -I.\RTE\_Target_1 -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.
1\CMSIS\Core\Include -IC:\Users\maglo\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\D
evice\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SE
TA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --pre
define="ARMCM3 SETA 1" --list=.\listings\rk_priseenmain_moteurs.lst RK_PriseEnM
ain_Moteurs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: .text unused
Clignotement 0000013A

Symbol: Clignotement
   Definitions
      At line 281 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 155 in file RK_PriseEnMain_Moteurs.s
      At line 197 in file RK_PriseEnMain_Moteurs.s
      At line 322 in file RK_PriseEnMain_Moteurs.s
      At line 331 in file RK_PriseEnMain_Moteurs.s
      At line 369 in file RK_PriseEnMain_Moteurs.s
      At line 370 in file RK_PriseEnMain_Moteurs.s

DebutProgrammation 00000070

Symbol: DebutProgrammation
   Definitions
      At line 154 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 246 in file RK_PriseEnMain_Moteurs.s
Comment: DebutProgrammation used once
END 00000248

Symbol: END
   Definitions
      At line 420 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: END unused
FinProgrammation 000000B0

Symbol: FinProgrammation
   Definitions
      At line 193 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 258 in file RK_PriseEnMain_Moteurs.s
      At line 269 in file RK_PriseEnMain_Moteurs.s

INFINI 000001F8

Symbol: INFINI
   Definitions
      At line 375 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: INFINI unused
ReadDroit 00000092

Symbol: ReadDroit
   Definitions
      At line 173 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 160 in file RK_PriseEnMain_Moteurs.s
Comment: ReadDroit used once
ReadGauche 00000074

Symbol: ReadGauche
   Definitions
      At line 156 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 177 in file RK_PriseEnMain_Moteurs.s
      At line 233 in file RK_PriseEnMain_Moteurs.s

ReadState 00000062

Symbol: ReadState
   Definitions
      At line 147 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 151 in file RK_PriseEnMain_Moteurs.s
      At line 243 in file RK_PriseEnMain_Moteurs.s

WAIT 00000162

Symbol: WAIT
   Definitions
      At line 306 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 206 in file RK_PriseEnMain_Moteurs.s
      At line 345 in file RK_PriseEnMain_Moteurs.s
      At line 354 in file RK_PriseEnMain_Moteurs.s
      At line 366 in file RK_PriseEnMain_Moteurs.s
      At line 382 in file RK_PriseEnMain_Moteurs.s
      At line 383 in file RK_PriseEnMain_Moteurs.s
      At line 384 in file RK_PriseEnMain_Moteurs.s
      At line 385 in file RK_PriseEnMain_Moteurs.s
      At line 396 in file RK_PriseEnMain_Moteurs.s
      At line 402 in file RK_PriseEnMain_Moteurs.s
      At line 403 in file RK_PriseEnMain_Moteurs.s
      At line 404 in file RK_PriseEnMain_Moteurs.s

__main 00000000

Symbol: __main
   Definitions
      At line 89 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 67 in file RK_PriseEnMain_Moteurs.s
Comment: __main used once
appuisCourtDroit 000000A0

Symbol: appuisCourtDroit
   Definitions
      At line 180 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 266 in file RK_PriseEnMain_Moteurs.s
Comment: appuisCourtDroit used once
appuisCourtGauche 00000082

Symbol: appuisCourtGauche



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 163 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 255 in file RK_PriseEnMain_Moteurs.s
Comment: appuisCourtGauche used once
attenteDemarrage 000000BA

Symbol: attenteDemarrage
   Definitions
      At line 200 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 204 in file RK_PriseEnMain_Moteurs.s
Comment: attenteDemarrage used once
checkAppuisLong 000000EC

Symbol: checkAppuisLong
   Definitions
      At line 238 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 152 in file RK_PriseEnMain_Moteurs.s
Comment: checkAppuisLong used once
checkAppuisLongDroit 00000118

Symbol: checkAppuisLongDroit
   Definitions
      At line 260 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 178 in file RK_PriseEnMain_Moteurs.s
Comment: checkAppuisLongDroit used once
checkAppuisLongGauche 00000102

Symbol: checkAppuisLongGauche
   Definitions
      At line 249 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 161 in file RK_PriseEnMain_Moteurs.s
Comment: checkAppuisLongGauche used once
clignoteAuClic 0000012E

Symbol: clignoteAuClic
   Definitions
      At line 272 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 167 in file RK_PriseEnMain_Moteurs.s
      At line 184 in file RK_PriseEnMain_Moteurs.s
      At line 205 in file RK_PriseEnMain_Moteurs.s

ecrireDirection 000000E2

Symbol: ecrireDirection
   Definitions
      At line 230 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 171 in file RK_PriseEnMain_Moteurs.s
      At line 188 in file RK_PriseEnMain_Moteurs.s

fin 000001DC

Symbol: fin



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 361 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 349 in file RK_PriseEnMain_Moteurs.s
      At line 358 in file RK_PriseEnMain_Moteurs.s

lectureMemoire 0000019E

Symbol: lectureMemoire
   Definitions
      At line 335 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 323 in file RK_PriseEnMain_Moteurs.s
      At line 333 in file RK_PriseEnMain_Moteurs.s

loop 00000146

Symbol: loop
   Definitions
      At line 286 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 300 in file RK_PriseEnMain_Moteurs.s
Comment: loop used once
parcours 000000CE

Symbol: parcours
   Definitions
      At line 213 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 223 in file RK_PriseEnMain_Moteurs.s
      At line 328 in file RK_PriseEnMain_Moteurs.s
      At line 350 in file RK_PriseEnMain_Moteurs.s
      At line 359 in file RK_PriseEnMain_Moteurs.s

testBp1 0000018C

Symbol: testBp1
   Definitions
      At line 326 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 319 in file RK_PriseEnMain_Moteurs.s
Comment: testBp1 used once
testCollision 0000016C

Symbol: testCollision
   Definitions
      At line 312 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 221 in file RK_PriseEnMain_Moteurs.s
Comment: testCollision used once
tourneADroite 000001A8

Symbol: tourneADroite
   Definitions
      At line 342 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 338 in file RK_PriseEnMain_Moteurs.s
Comment: tourneADroite used once
tourneAGauche 000001C2



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: tourneAGauche
   Definitions
      At line 351 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 339 in file RK_PriseEnMain_Moteurs.s
Comment: tourneAGauche used once
wait0 000000F0

Symbol: wait0
   Definitions
      At line 239 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 245 in file RK_PriseEnMain_Moteurs.s
Comment: wait0 used once
wait01 00000106

Symbol: wait01
   Definitions
      At line 251 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 257 in file RK_PriseEnMain_Moteurs.s
Comment: wait01 used once
wait02 0000011C

Symbol: wait02
   Definitions
      At line 262 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 268 in file RK_PriseEnMain_Moteurs.s
Comment: wait02 used once
wait1 0000014C

Symbol: wait1
   Definitions
      At line 290 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 291 in file RK_PriseEnMain_Moteurs.s
Comment: wait1 used once
wait2 00000156

Symbol: wait2
   Definitions
      At line 296 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 297 in file RK_PriseEnMain_Moteurs.s
Comment: wait2 used once
wait21 00000132

Symbol: wait21
   Definitions
      At line 275 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 276 in file RK_PriseEnMain_Moteurs.s
Comment: wait21 used once
wait3 00000166

Symbol: wait3
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

      At line 307 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 308 in file RK_PriseEnMain_Moteurs.s
Comment: wait3 used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buffer 00000000

Symbol: buffer
   Definitions
      At line 429 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 91 in file RK_PriseEnMain_Moteurs.s
Comment: buffer used once
variable 00000000

Symbol: variable
   Definitions
      At line 428 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: variable unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0 00000001

Symbol: BROCHE0
   Definitions
      At line 43 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 313 in file RK_PriseEnMain_Moteurs.s
Comment: BROCHE0 used once
BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 45 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 122 in file RK_PriseEnMain_Moteurs.s
      At line 126 in file RK_PriseEnMain_Moteurs.s

BROCHE1 00000002

Symbol: BROCHE1
   Definitions
      At line 44 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 314 in file RK_PriseEnMain_Moteurs.s
Comment: BROCHE1 used once
BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 41 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 110 in file RK_PriseEnMain_Moteurs.s
      At line 114 in file RK_PriseEnMain_Moteurs.s
      At line 118 in file RK_PriseEnMain_Moteurs.s
      At line 142 in file RK_PriseEnMain_Moteurs.s
      At line 143 in file RK_PriseEnMain_Moteurs.s
      At line 195 in file RK_PriseEnMain_Moteurs.s
      At line 196 in file RK_PriseEnMain_Moteurs.s
      At line 283 in file RK_PriseEnMain_Moteurs.s
      At line 284 in file RK_PriseEnMain_Moteurs.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 49 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 130 in file RK_PriseEnMain_Moteurs.s
      At line 134 in file RK_PriseEnMain_Moteurs.s

BROCHE_4 00000010

Symbol: BROCHE_4
   Definitions
      At line 39 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 182 in file RK_PriseEnMain_Moteurs.s
      At line 183 in file RK_PriseEnMain_Moteurs.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

BROCHE_5 00000020

Symbol: BROCHE_5
   Definitions
      At line 40 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 165 in file RK_PriseEnMain_Moteurs.s
      At line 166 in file RK_PriseEnMain_Moteurs.s

BROCHE_6 00000040

Symbol: BROCHE_6
   Definitions
      At line 47 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 148 in file RK_PriseEnMain_Moteurs.s
      At line 157 in file RK_PriseEnMain_Moteurs.s
      At line 201 in file RK_PriseEnMain_Moteurs.s
      At line 240 in file RK_PriseEnMain_Moteurs.s
      At line 252 in file RK_PriseEnMain_Moteurs.s

BROCHE_7 00000080

Symbol: BROCHE_7
   Definitions
      At line 48 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 174 in file RK_PriseEnMain_Moteurs.s
      At line 263 in file RK_PriseEnMain_Moteurs.s

DUREE 00080000

Symbol: DUREE
   Definitions
      At line 51 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 288 in file RK_PriseEnMain_Moteurs.s
      At line 294 in file RK_PriseEnMain_Moteurs.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 35 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 121 in file RK_PriseEnMain_Moteurs.s
      At line 129 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 32 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 113 in file RK_PriseEnMain_Moteurs.s
      At line 125 in file RK_PriseEnMain_Moteurs.s
      At line 133 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DIR 00000400



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_O_DIR
   Definitions
      At line 24 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 109 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 28 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 117 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 21 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 129 in file RK_PriseEnMain_Moteurs.s
      At line 133 in file RK_PriseEnMain_Moteurs.s
      At line 148 in file RK_PriseEnMain_Moteurs.s
      At line 157 in file RK_PriseEnMain_Moteurs.s
      At line 174 in file RK_PriseEnMain_Moteurs.s
      At line 201 in file RK_PriseEnMain_Moteurs.s
      At line 240 in file RK_PriseEnMain_Moteurs.s
      At line 252 in file RK_PriseEnMain_Moteurs.s
      At line 263 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 19 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 121 in file RK_PriseEnMain_Moteurs.s
      At line 125 in file RK_PriseEnMain_Moteurs.s
      At line 313 in file RK_PriseEnMain_Moteurs.s
      At line 314 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 17 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 109 in file RK_PriseEnMain_Moteurs.s
      At line 113 in file RK_PriseEnMain_Moteurs.s
      At line 117 in file RK_PriseEnMain_Moteurs.s
      At line 143 in file RK_PriseEnMain_Moteurs.s
      At line 166 in file RK_PriseEnMain_Moteurs.s
      At line 183 in file RK_PriseEnMain_Moteurs.s
      At line 196 in file RK_PriseEnMain_Moteurs.s
      At line 284 in file RK_PriseEnMain_Moteurs.s

SYSCTL_PERIPH_GPIO 400FE108




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 15 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 98 in file RK_PriseEnMain_Moteurs.s
Comment: SYSCTL_PERIPH_GPIO used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 74 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 344 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 73 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 218 in file RK_PriseEnMain_Moteurs.s
      At line 364 in file RK_PriseEnMain_Moteurs.s
      At line 380 in file RK_PriseEnMain_Moteurs.s
      At line 411 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 75 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_MAX 00000000

Symbol: MOTEUR_DROIT_MAX
   Definitions
      At line 86 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 394 in file RK_PriseEnMain_Moteurs.s
      At line 409 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_MIN 00000000

Symbol: MOTEUR_DROIT_MIN
   Definitions
      At line 83 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 401 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_MIN used once
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 72 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 321 in file RK_PriseEnMain_Moteurs.s
      At line 330 in file RK_PriseEnMain_Moteurs.s
      At line 346 in file RK_PriseEnMain_Moteurs.s
      At line 416 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 71 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 215 in file RK_PriseEnMain_Moteurs.s
      At line 343 in file RK_PriseEnMain_Moteurs.s
      At line 362 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 80 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 353 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 79 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 219 in file RK_PriseEnMain_Moteurs.s
      At line 365 in file RK_PriseEnMain_Moteurs.s
      At line 400 in file RK_PriseEnMain_Moteurs.s
      At line 412 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 81 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_MAX 00000000

Symbol: MOTEUR_GAUCHE_MAX
   Definitions
      At line 87 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 395 in file RK_PriseEnMain_Moteurs.s
      At line 410 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_MIN 00000000

Symbol: MOTEUR_GAUCHE_MIN
   Definitions
      At line 84 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 381 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_MIN used once
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 78 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 320 in file RK_PriseEnMain_Moteurs.s
      At line 329 in file RK_PriseEnMain_Moteurs.s
      At line 355 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 415 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 77 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 216 in file RK_PriseEnMain_Moteurs.s
      At line 352 in file RK_PriseEnMain_Moteurs.s
      At line 363 in file RK_PriseEnMain_Moteurs.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 69 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 139 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_INIT used once
WAIT_MIN 00000000

Symbol: WAIT_MIN
   Definitions
      At line 85 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: WAIT_MIN unused
16 symbols
407 symbols in table
